00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/29/2017 3:20:00 PM

00001000                             1  START  ORG $1000
00001000  4EB9 00001006              2                 JSR MAIN_LOOP
00001006                             3  
00001006                             4  *** D3 - ISOLATED BITS FOR COMPARISONS
00001006                             5  *** D4 - MODE
00001006                             6  *** D5 - CURRENT OPCODE
00001006                             7  ***
00001006                             8  *** 
00001006                             9  MAIN_LOOP
00001006  247C 00001000             10                   MOVEA.L #$1000,A2
0000100C  41F9 000020A4             11                   LEA     jmp_table,A0    *Index into the table
00001012  4DF9 00002E1E             12                   LEA     BUFFER, A6      * Load buffer into A6
00001018  4283                      13                   CLR.L   D3              *Zero it
0000101A                            14                   ;MOVE.W  (A2), D3
0000101A                            15  
0000101A                            16                   * TEST OPCODES
0000101A                            17                   ; MOVE.W  #$45D7,D3 * LEA (A7), A2
0000101A                            18                   ;MOVE.W  #$4E71,D3 * NOP
0000101A                            19                   ; MOVE.W  #$4E75,D3 * RTS
0000101A                            20                   ; MOVE.W  #$4EB0,D3 * JSR
0000101A                            21                   * MOVE.W  #$0642,D3   *ADDI.W  #1000,D2
0000101A                            22                   ; MOVE.W  #$D4FC,D3   *ADDA.W   #1000, A2
0000101A                            23  
0000101A                            24                   ; MOVE.W  #$D5FC,D3   *ADDA.L   #1000, A2
0000101A                            25                   ;MOVE.W  #$D64A, D3  * ADD.W A2,D3
0000101A                            26  
0000101A  363C 5201                 27                    MOVE.W    #$5201,D3    *ADDQ
0000101E                            28  
0000101E                            29                   ; MOVE.W     #$7E70, D3 *MOVEQ
0000101E                            30                   ; MOVE.W     #$80C0, D3 *DIVU
0000101E                            31                   ; MOVE.W     #$86D9, D3 *DIVU (A1)+,D3                      
0000101E                            32                   ; MOVE.W     #$8000, D3 * OR
0000101E                            33                   ; MOVE.W        #$9000, D3 * SUB
0000101E                            34                    ;MOVE.W        #$B000, D3 * CMP
0000101E                            35                   ; MOVE.W        #$C1C0, D3 * MULS
0000101E                            36                   ; MOVE.W        #$C000, D3 * AND
0000101E                            37                   ; MOVE.W        #$E0F8, D3  *ASR
0000101E                            38                   ; MOVE.W        #$E1E2, D3  *ASL
0000101E                            39                   ; MOVE.W        #$E393, D3  *LSL
0000101E                            40                   ; MOVE.W        #$E2DC, D3  *LSR
0000101E                            41                    ; MOVE.W        #$8E62, D3  *OR.W        -(A2),D7
0000101E                            42                        
0000101E                            43  
0000101E  4EB9 00002AD0             44                   JSR    PRINT_ADDRESS
00001024  544A                      45                   ADD.W   #2,A2 * Can safely increment the current address by a word
00001026  3A03                      46                   MOVE.W  D3,D5       * Before manipulating opcode, store in D5 
00001028  183C 000C                 47                   MOVE.B  #12,D4      *Shift 12 bits to the right  
0000102C  E86B                      48                   LSR.W   D4,D3       *Move the bits
0000102E  C6FC 0006                 49                   MULU    #6,D3       *Form offset     
00001032  4EB0 3000                 50                   JSR     0(A0,D3)   *Jump indirect with index
00001036  4EB9 00002AF0             51                   JSR     PRINT_BUFFER * GOT OPCODE AND EA LINE, PRINT IT
0000103C                            52  
0000103C  B4CB                      53                   CMP     A3,A2
0000103E  6E00 1060                 54                   BGT     EXIT
00001042  60C2                      55                   BRA     MAIN_LOOP
00001044                            56                   *BRA      EXIT
00001044                            57                                  
00001044                            58      INCLUDE 'definitions.x68'
00001044                            59  
00001044  =0000000D                 60  CR              EQU     $0D         carriage return
00001044  =0000000A                 61  LF              EQU     $0A         line feed
00001044= 43 53 53 20 34 32 ...     62  welcome_msg         DC.B    'CSS 422 Disassembler Final Project',CR,LF
00001068= 42 79 20 54 65 61 ...     63                      DC.B    'By Team Awesome (Olga Rocheeva, Dwina Solihin, Peter Stanton)',CR,LF,0
000010A8= 45 6E 74 65 72 20 ...     64  location_start_msg  DC.B    'Enter Start location address',CR,LF,0
000010C7= 45 6E 74 65 72 20 ...     65  location_end_msg    DC.B    'Enter End location address',CR,LF,0
000010E4= 41 64 64 72 65 73 ...     66  addr_oddBit_msg     DC.B    'Address cannot end on an odd byte.',CR,LF,CR,LF,0
0000110B= 45 6E 64 69 6E 67 ...     67  addr_order_check    DC.B    'Ending Address cannot go before the starting address.',CR,LF,CR,LF,0
00001145= 50 72 65 73 73 20 ...     68  pause_msg           DC.B    'Press enter to continue!',CR,LF
0000115F= 52 65 61 63 68 65 ...     69  endTest_msg         DC.B    'Reached end of test data.', CR,LF
0000117A= 54 72 79 20 61 6E ...     70                      DC.B    'Try another location? (yes/no): ',0
0000119B= 0D 0A 00                  71  linebreak           DC.B    CR,LF,0
0000119E                            72                      
0000119E= 44 41 54 41 00            73  Invalid_disp        DC.B    'DATA',0
000011A3= 57 52 4F 4E 47 45 ...     74  InvalidEA_disp      DC.B    'WRONGEA',0
000011AB                            75  
000011AB= 4E 4F 50 00               76  NOP_disp            DC.B    'NOP',0
000011AF= 4D 4F 56 45 00            77  MOVE_disp           DC.B    'MOVE',0
000011B4= 4D 4F 56 45 41 00         78  MOVEA_disp          DC.B    'MOVEA',0
000011BA= 4D 4F 56 45 51 00         79  MOVEQ_disp          DC.B    'MOVEQ',0
000011C0= 4D 4F 56 45 4D 00         80  MOVEM_disp          DC.B    'MOVEM',0
000011C6= 41 44 44 00               81  ADD_disp            DC.B    'ADD',0
000011CA= 41 44 44 41 00            82  ADDA_disp           DC.B    'ADDA',0
000011CF= 41 44 44 49 00            83  ADDI_disp           DC.B    'ADDI',0
000011D4= 41 44 44 51 00            84  ADDQ_disp           DC.B    'ADDQ',0
000011D9= 53 55 42 00               85  SUB_disp            DC.B    'SUB',0
000011DD= 4D 55 4C 53 00            86  MULS_disp           DC.B    'MULS',0
000011E2= 44 49 56 55 00            87  DIVU_disp           DC.B    'DIVU',0
000011E7= 4C 45 41 00               88  LEA_disp            DC.B    'LEA',0
000011EB= 43 4C 52 00               89  CLR_disp            DC.B    'CLR',0
000011EF= 41 4E 44 00               90  AND_disp            DC.B    'AND',0
000011F3= 4F 52 00                  91  OR_disp             DC.B    'OR',0
000011F6= 4C 53 4C 00               92  LSL_disp            DC.B    'LSL',0
000011FA= 4C 53 52 00               93  LSR_disp            DC.B    'LSR',0
000011FE= 41 53 4C 00               94  ASL_disp            DC.B    'ASL',0
00001202= 41 53 52 00               95  ASR_disp            DC.B    'ASR',0
00001206= 52 4F 4C 00               96  ROL_disp            DC.B    'ROL',0
0000120A= 52 4F 52 00               97  ROR_disp            DC.B    'ROR',0
0000120E= 4A 53 52 00               98  JSR_disp            DC.B    'JSR',0
00001212= 52 54 53 00               99  RTS_disp            DC.B    'RTS',0
00001216= 42 43 43 00              100  BCC_disp            DC.B    'BCC',0
0000121A= 42 47 54 00              101  BGT_disp            DC.B    'BGT',0    
0000121E= 42 4C 45 00              102  BLE_disp            DC.b    'BLE',0
00001222                           103  
00001222                           104  
00001222= 30 00                    105  hexaTable               DC.B    '0',0
00001224= 31 00                    106                          DC.B    '1',0
00001226= 32 00                    107                          DC.B    '2',0
00001228= 33 00                    108                          DC.B    '3',0
0000122A= 34 00                    109                          DC.B    '4',0
0000122C= 35 00                    110                          DC.B    '5',0
0000122E= 36 00                    111                          DC.B    '6',0
00001230= 37 00                    112                          DC.B    '7',0
00001232= 38 00                    113                          DC.B    '8',0
00001234= 39 00                    114                          DC.B    '9',0
00001236= 41 00                    115                          DC.B    'A',0
00001238= 42 00                    116                          DC.B    'B',0
0000123A= 43 00                    117                          DC.B    'C',0
0000123C= 44 00                    118                          DC.B    'D',0
0000123E= 45 00                    119                          DC.B    'E',0
00001240= 46 00                    120                          DC.B    'F',0
00001242= 23 00                    121  poundsign               DC.B    '#',0
00001244= 24 00                    122  dollarsign              DC.B    '$',0
00001246= 2B 00                    123  plussign                DC.B    '+',0
00001248= 2D 00                    124  minussign               DC.B    '-',0
0000124A= 2C 00                    125  commasign               DC.B    ',',0
0000124C= 2F 00                    126  backslashsigh           DC.B    '/',0
0000124E= 28 00                    127  openparen               DC.B    '(',0
00001250= 29 00                    128  closeparen              DC.B    ')',0
00001252= 20 00                    129  space                   DC.B    ' ',0   
00001254= 2E 42 00                 130  size_b                  DC.B    '.B',0
00001257= 2E 57 00                 131  size_w                  DC.B    '.W',0        
0000125A= 2E 4C 00                 132  size_l                  DC.B    '.L',0
0000125D                           133  
0000125D                           134  linecount               DS.B    1       *storeage for lines on a screen
0000125E= 01                       135  input_buffer            DC.B    1       *creates input buffer for ASCII string
00001260                           136  location_startData      DS.L    1       *location on where to start reading data
00001264                           137  location_endData        DS.L    1       *location on where to end reading data
00001268                           138  table_length            DS.B    1       *Number of spaces in the table to print to console
00001269                           139  
00001269                           140  
00001269                           141  -------------------- end include --------------------
00001269                           142      INCLUDE 'TEST_CODE.x68'
00001269                           143   *   ORG    $6000
00001269                           144  
00001269                           145    *  BRA         INPUT
00001269                           146  
0000126A  2A3C 00000123            147      MOVE.L  #$123,D5
00001270  2401                     148      MOVE.L  D1,D2
00001272  280D                     149      MOVE.L  A5,D4
00001274  2614                     150      MOVE.L  (A4),D3
00001276  261F                     151      MOVE.L  (A7)+,D3
00001278  2E20                     152      MOVE.L  -(A0),D7
0000127A  2638 0000                153      MOVE.L  $0,D3
0000127E  2238 0FFF                154      MOVE.L  $FFF,D1
00001282  2439 00008000            155      MOVE.L  $8000,D2
00001288  2639 00020000            156      MOVE.L  $20000,D3
0000128E                           157      
0000128E  28BC 00000123            158      MOVE.L  #$123,(A4)
00001294  2881                     159      MOVE.L  D1,(A4)
00001296  288D                     160      MOVE.L  A5,(A4)
00001298  2894                     161      MOVE.L  (A4),(A4)
0000129A  289F                     162      MOVE.L  (A7)+,(A4)
0000129C  28A0                     163      MOVE.L  -(A0),(A4)
0000129E  28B8 0000                164      MOVE.L  $0,(A4)
000012A2  28B8 0FFF                165      MOVE.L  $FFF,(A4)
000012A6  28B9 00008000            166      MOVE.L  $8000,(A4)
000012AC  28B9 00020000            167      MOVE.L  $20000,(A4)
000012B2                           168      
000012B2  28FC 00000123            169      MOVE.L  #$123,(A4)+
000012B8  28C1                     170      MOVE.L  D1,(A4)+
000012BA  28CD                     171      MOVE.L  A5,(A4)+
000012BC  28D4                     172      MOVE.L  (A4),(A4)+
000012BE  28DF                     173      MOVE.L  (A7)+,(A4)+
000012C0  28E0                     174      MOVE.L  -(A0),(A4)+
000012C2  28F8 0000                175      MOVE.L  $0,(A4)+
000012C6  28F8 0FFF                176      MOVE.L  $FFF,(A4)+
000012CA  28F9 00008000            177      MOVE.L  $8000,(A4)+
000012D0  28F9 00020000            178      MOVE.L  $20000,(A4)+
000012D6                           179      
000012D6  293C 00000123            180      MOVE.L  #$123,-(A4)
000012DC  2901                     181      MOVE.L  D1,-(A4)
000012DE  290D                     182      MOVE.L  A5,-(A4)
000012E0  2914                     183      MOVE.L  (A4),-(A4)
000012E2  291F                     184      MOVE.L  (A7)+,-(A4)
000012E4  2920                     185      MOVE.L  -(A0),-(A4)
000012E6  2938 0000                186      MOVE.L  $0,-(A4)
000012EA  2938 0FFF                187      MOVE.L  $FFF,-(A4)
000012EE  2939 00008000            188      MOVE.L  $8000,-(A4)
000012F4  2939 00020000            189      MOVE.L  $20000,-(A4)
000012FA                           190      
000012FA  21FC 00000123 0000       191      MOVE.L  #$123,$0
00001302  21C1 0000                192      MOVE.L  D1,$0
00001306  21CD 0000                193      MOVE.L  A5,$0
0000130A  21D4 0000                194      MOVE.L  (A4),$0
0000130E  21DF 0000                195      MOVE.L  (A7)+,$0
00001312  21E0 0000                196      MOVE.L  -(A0),$0
00001316  21F8 0000 0000           197      MOVE.L  $0,$0
0000131C  21F8 0FFF 0000           198      MOVE.L  $FFF,$0
00001322  21F9 00008000 0000       199      MOVE.L  $8000,$0
0000132A  21F9 00020000 0000       200      MOVE.L  $20000,$0
00001332                           201      
00001332  23FC 00000123 00008000   202      MOVE.L  #$123,$8000
0000133C  23C1 00008000            203      MOVE.L  D1,$8000
00001342  23CD 00008000            204      MOVE.L  A5,$8000
00001348  23D4 00008000            205      MOVE.L  (A4),$8000
0000134E  23DF 00008000            206      MOVE.L  (A7)+,$8000
00001354  23E0 00008000            207      MOVE.L  -(A0),$8000
0000135A  23F8 0000 00008000       208      MOVE.L  $0,$8000
00001362  23F8 0FFF 00008000       209      MOVE.L  $FFF,$8000
0000136A  23F9 00008000 00008000   210      MOVE.L  $8000,$8000
00001374  23F9 00020000 00008000   211      MOVE.L  $20000,$8000
0000137E                           212      
0000137E  23FC 00000123 00021000   213      MOVE.L  #$123,$21000
00001388  23C1 00021000            214      MOVE.L  D1,$21000
0000138E  23CD 00021000            215      MOVE.L  A5,$21000
00001394  23D4 00021000            216      MOVE.L  (A4),$21000
0000139A  23DF 00021000            217      MOVE.L  (A7)+,$21000
000013A0  23E0 00021000            218      MOVE.L  -(A0),$21000
000013A6  23F8 0000 00021000       219      MOVE.L  $0,$21000
000013AE  23F8 0FFF 00021000       220      MOVE.L  $FFF,$21000
000013B6  23F9 00008000 00021000   221      MOVE.L  $8000,$21000
000013C0  23F9 00020000 00021000   222      MOVE.L  $20000,$21000
000013CA                           223      
000013CA  3A3C 0123                224      MOVE.W  #$123,D5
000013CE  3401                     225      MOVE.W  D1,D2
000013D0  380D                     226      MOVE.W  A5,D4
000013D2  3614                     227      MOVE.W  (A4),D3
000013D4  361F                     228      MOVE.W  (A7)+,D3
000013D6  3E20                     229      MOVE.W  -(A0),D7
000013D8  3638 0000                230      MOVE.W  $0,D3
000013DC  3238 0FFF                231      MOVE.W  $FFF,D1
000013E0  3439 00008000            232      MOVE.W  $8000,D2
000013E6  3639 00020000            233      MOVE.W  $20000,D3
000013EC                           234      
000013EC  38BC 0123                235      MOVE.W  #$123,(A4)
000013F0  3881                     236      MOVE.W  D1,(A4)
000013F2  388D                     237      MOVE.W  A5,(A4)
000013F4  3894                     238      MOVE.W  (A4),(A4)
000013F6  389F                     239      MOVE.W  (A7)+,(A4)
000013F8  38A0                     240      MOVE.W  -(A0),(A4)
000013FA  38B8 0000                241      MOVE.W  $0,(A4)
000013FE  38B8 0FFF                242      MOVE.W  $FFF,(A4)
00001402  38B9 00008000            243      MOVE.W  $8000,(A4)
00001408  38B9 00020000            244      MOVE.W  $20000,(A4)
0000140E                           245      
0000140E  38FC 0123                246      MOVE.W  #$123,(A4)+
00001412  38C1                     247      MOVE.W  D1,(A4)+
00001414  38CD                     248      MOVE.W  A5,(A4)+
00001416  38D4                     249      MOVE.W  (A4),(A4)+
00001418  38DF                     250      MOVE.W  (A7)+,(A4)+
0000141A  38E0                     251      MOVE.W  -(A0),(A4)+
0000141C  38F8 0000                252      MOVE.W  $0,(A4)+
00001420  38F8 0FFF                253      MOVE.W  $FFF,(A4)+
00001424  38F9 00008000            254      MOVE.W  $8000,(A4)+
0000142A  38F9 00020000            255      MOVE.W  $20000,(A4)+
00001430                           256      
00001430  393C 0123                257      MOVE.W  #$123,-(A4)
00001434  3901                     258      MOVE.W  D1,-(A4)
00001436  390D                     259      MOVE.W  A5,-(A4)
00001438  3914                     260      MOVE.W  (A4),-(A4)
0000143A  391F                     261      MOVE.W  (A7)+,-(A4)
0000143C  3920                     262      MOVE.W  -(A0),-(A4)
0000143E  3938 0000                263      MOVE.W  $0,-(A4)
00001442  3938 0FFF                264      MOVE.W  $FFF,-(A4)
00001446  3939 00008000            265      MOVE.W  $8000,-(A4)
0000144C  3939 00020000            266      MOVE.W  $20000,-(A4)
00001452                           267      
00001452  31FC 0123 0000           268      MOVE.W  #$123,$0
00001458  31C1 0000                269      MOVE.W  D1,$0
0000145C  31CD 0000                270      MOVE.W  A5,$0
00001460  31D4 0000                271      MOVE.W  (A4),$0
00001464  31DF 0000                272      MOVE.W  (A7)+,$0
00001468  31E0 0000                273      MOVE.W  -(A0),$0
0000146C  31F8 0000 0000           274      MOVE.W  $0,$0
00001472  31F8 0FFF 0000           275      MOVE.W  $FFF,$0
00001478  31F9 00008000 0000       276      MOVE.W  $8000,$0
00001480  31F9 00020000 0000       277      MOVE.W  $20000,$0
00001488                           278      
00001488  33FC 0123 00008000       279      MOVE.W  #$123,$8000
00001490  33C1 00008000            280      MOVE.W  D1,$8000
00001496  33CD 00008000            281      MOVE.W  A5,$8000
0000149C  33D4 00008000            282      MOVE.W  (A4),$8000
000014A2  33DF 00008000            283      MOVE.W  (A7)+,$8000
000014A8  33E0 00008000            284      MOVE.W  -(A0),$8000
000014AE  33F8 0000 00008000       285      MOVE.W  $0,$8000
000014B6  33F8 0FFF 00008000       286      MOVE.W  $FFF,$8000
000014BE  33F9 00008000 00008000   287      MOVE.W  $8000,$8000
000014C8  33F9 00020000 00008000   288      MOVE.W  $20000,$8000
000014D2                           289      
000014D2  33FC 0123 00021000       290      MOVE.W  #$123,$21000
000014DA  33C1 00021000            291      MOVE.W  D1,$21000
000014E0  33CD 00021000            292      MOVE.W  A5,$21000
000014E6  33D4 00021000            293      MOVE.W  (A4),$21000
000014EC  33DF 00021000            294      MOVE.W  (A7)+,$21000
000014F2  33E0 00021000            295      MOVE.W  -(A0),$21000
000014F8  33F8 0000 00021000       296      MOVE.W  $0,$21000
00001500  33F8 0FFF 00021000       297      MOVE.W  $FFF,$21000
00001508  33F9 00008000 00021000   298      MOVE.W  $8000,$21000
00001512  33F9 00020000 00021000   299      MOVE.W  $20000,$21000
0000151C                           300      
0000151C  1A3C 0013                301      MOVE.B  #$13,D5
00001520  1401                     302      MOVE.B  D1,D2
00001522                           303  
00001522  1614                     304      MOVE.B  (A4),D3
00001524  161F                     305      MOVE.B  (A7)+,D3
00001526  1E20                     306      MOVE.B  -(A0),D7
00001528  1638 0000                307      MOVE.B  $0,D3
0000152C  1238 0FFF                308      MOVE.B  $FFF,D1
00001530  1439 00008000            309      MOVE.B  $8000,D2
00001536  1639 00020000            310      MOVE.B  $20000,D3
0000153C                           311      
0000153C  18BC 0013                312      MOVE.B  #$13,(A4)
00001540  1881                     313      MOVE.B  D1,(A4)
00001542                           314      
00001542  1894                     315      MOVE.B  (A4),(A4)
00001544  189F                     316      MOVE.B  (A7)+,(A4)
00001546  18A0                     317      MOVE.B  -(A0),(A4)
00001548  18B8 0000                318      MOVE.B  $0,(A4)
0000154C  18B8 0FFF                319      MOVE.B  $FFF,(A4)
00001550  18B9 00008000            320      MOVE.B  $8000,(A4)
00001556  18B9 00020000            321      MOVE.B  $20000,(A4)
0000155C                           322      
0000155C  18FC 0013                323      MOVE.B  #$13,(A4)+
00001560  18C1                     324      MOVE.B  D1,(A4)+
00001562                           325  
00001562  18D4                     326      MOVE.B  (A4),(A4)+
00001564  18DF                     327      MOVE.B  (A7)+,(A4)+
00001566  18E0                     328      MOVE.B  -(A0),(A4)+
00001568  18F8 0000                329      MOVE.B  $0,(A4)+
0000156C  18F8 0FFF                330      MOVE.B  $FFF,(A4)+
00001570  18F9 00008000            331      MOVE.B  $8000,(A4)+
00001576  18F9 00020000            332      MOVE.B  $20000,(A4)+
0000157C                           333      
0000157C  193C 0013                334      MOVE.B  #$13,-(A4)
00001580  1901                     335      MOVE.B  D1,-(A4)
00001582                           336  
00001582  1914                     337      MOVE.B  (A4),-(A4)
00001584  191F                     338      MOVE.B  (A7)+,-(A4)
00001586  1920                     339      MOVE.B  -(A0),-(A4)
00001588  1938 0000                340      MOVE.B  $0,-(A4)
0000158C  1938 0FFF                341      MOVE.B  $FFF,-(A4)
00001590  1939 00008000            342      MOVE.B  $8000,-(A4)
00001596  1939 00020000            343      MOVE.B  $20000,-(A4)
0000159C                           344     
0000159C  11FC 0013 0000           345      MOVE.B  #$13,$0
000015A2  11C1 0000                346      MOVE.B  D1,$0
000015A6                           347  
000015A6  11D4 0000                348      MOVE.B  (A4),$0
000015AA  11DF 0000                349      MOVE.B  (A7)+,$0
000015AE  11E0 0000                350      MOVE.B  -(A0),$0
000015B2  11F8 0000 0000           351      MOVE.B  $0,$0
000015B8  11F8 0FFF 0000           352      MOVE.B  $FFF,$0
000015BE  11F9 00008000 0000       353      MOVE.B  $8000,$0
000015C6  11F9 00020000 0000       354      MOVE.B  $20000,$0
000015CE                           355      
000015CE  13FC 0000 00008000       356      MOVE.B  #$0,$8000
000015D6  13C1 00008000            357      MOVE.B  D1,$8000
000015DC                           358  
000015DC  13D4 00008000            359      MOVE.B  (A4),$8000
000015E2  13DF 00008000            360      MOVE.B  (A7)+,$8000
000015E8  13E0 00008000            361      MOVE.B  -(A0),$8000
000015EE  13F8 0000 00008000       362      MOVE.B  $0,$8000
000015F6  13F8 0FFF 00008000       363      MOVE.B  $FFF,$8000
000015FE  13F9 00008000 00008000   364      MOVE.B  $8000,$8000
00001608  13F9 00020000 00008000   365      MOVE.B  $20000,$8000
00001612                           366      
00001612  13FC 00FF 00021000       367      MOVE.B  #$FF,$21000
0000161A  13C1 00021000            368      MOVE.B  D1,$21000
00001620                           369  
00001620  13D4 00021000            370      MOVE.B  (A4),$21000
00001626  13DF 00021000            371      MOVE.B  (A7)+,$21000
0000162C  13E0 00021000            372      MOVE.B  -(A0),$21000
00001632  13F8 0000 00021000       373      MOVE.B  $0,$21000
0000163A  13F8 0FFF 00021000       374      MOVE.B  $FFF,$21000
00001642  13F9 00008000 00021000   375      MOVE.B  $8000,$21000
0000164C  13F9 00020000 00021000   376      MOVE.B  $20000,$21000
00001656                           377      
00001656                           378  
00001656  3442                     379      MOVEA.W   D2,A2
00001658  364D                     380      MOVEA.W   A5,A3
0000165A  365C                     381      MOVEA.W   (A4)+,A3
0000165C  3A62                     382      MOVEA.W   -(A2),A5
0000165E  3678 0000                383      MOVEA.W   $0,A3
00001662  3678 1234                384      MOVEA.W   $1234,A3
00001666  3679 00008000            385      MOVEA.W   $8000,A3
0000166C  3E79 00FFFFFF            386      MOVEA.W   $FFFFFF,A7
00001672  367C 0000                387      MOVEA.W   #$0,A3
00001676  367C 1000                388      MOVEA.W   #$1000,A3
0000167A  3C7C 8000                389      MOVEA.W   #$8000,A6
0000167E                           390      
0000167E  2442                     391      MOVEA.L   D2,A2
00001680  264D                     392      MOVEA.L   A5,A3
00001682  265C                     393      MOVEA.L   (A4)+,A3
00001684  2A62                     394      MOVEA.L   -(A2),A5
00001686  2678 0000                395      MOVEA.L   $0,A3
0000168A  2678 1234                396      MOVEA.L   $1234,A3
0000168E  2679 00008000            397      MOVEA.L   $8000,A3
00001694  2E79 00FFFFFF            398      MOVEA.L   $FFFFFF,A7
0000169A  267C 00000000            399      MOVEA.L   #$0,A3
000016A0  267C 00001000            400      MOVEA.L   #$1000,A3
000016A6  2C7C 00008000            401      MOVEA.L   #$8000,A6
000016AC  2C7C FFFF8000            402      MOVEA.L   #$FFFF8000,A6
000016B2                           403  
000016B2  5881                     404      ADDI.L   #4,D1   *Assembler changes this to ADDQ unless the number being added is greater than #8.
000016B4  0681 00000009            405      ADDI.L   #9,D1
000016BA  0681 00000000            406      ADDI.L   #0,D1
000016C0  0687 FFFFFFFF            407      ADDI.L   #$FFFFFFFF,D7
000016C6  0645 FFFF                408      ADDI.W   #$FFFF,D5
000016CA  0645 0000                409      ADDI.W   #$0,D5
000016CE  0644 0009                410      ADDI.W   #$9,D4
000016D2  0603 00FF                411      ADDI.B   #$FF,D3
000016D6  0603 0009                412      ADDI.B   #$9,D3
000016DA  0603 0000                413      ADDI.B   #$0,D3
000016DE                           414      
000016DE  5891                     415      ADDI.L   #4,(A1)
000016E0  0691 00000009            416      ADDI.L   #9,(A1)
000016E6  0691 00000000            417      ADDI.L   #0,(A1)
000016EC  0691 FFFFFFFF            418      ADDI.L   #$FFFFFFFF,(A1)
000016F2  0651 FFFF                419      ADDI.W   #$FFFF,(A1)
000016F6  0651 0000                420      ADDI.W   #$0,(A1)
000016FA  0651 0009                421      ADDI.W   #$9,(A1)
000016FE  0611 00FF                422      ADDI.B   #$FF,(A1)
00001702  0611 0009                423      ADDI.B   #$9,(A1)
00001706  0611 0000                424      ADDI.B   #$0,(A1)
0000170A                           425      
0000170A  5899                     426      ADDI.L   #4,(A1)+
0000170C  0699 00000009            427      ADDI.L   #9,(A1)+
00001712  0699 00000000            428      ADDI.L   #0,(A1)+
00001718  0699 FFFFFFFF            429      ADDI.L   #$FFFFFFFF,(A1)+
0000171E  0659 FFFF                430      ADDI.W   #$FFFF,(A1)+
00001722  0659 0000                431      ADDI.W   #$0,(A1)+
00001726  0659 0009                432      ADDI.W   #$9,(A1)+
0000172A  0619 00FF                433      ADDI.B   #$FF,(A1)+
0000172E  0619 0009                434      ADDI.B   #$9,(A1)+
00001732  0619 0000                435      ADDI.B   #$0,(A1)+
00001736                           436      
00001736  58A1                     437      ADDI.L   #4,-(A1)
00001738  06A1 00000009            438      ADDI.L   #9,-(A1)
0000173E  06A1 00000000            439      ADDI.L   #0,-(A1)
00001744  06A1 FFFFFFFF            440      ADDI.L   #$FFFFFFFF,-(A1)
0000174A  0661 FFFF                441      ADDI.W   #$FFFF,-(A1)
0000174E  0661 0000                442      ADDI.W   #$0,-(A1)
00001752  0661 0009                443      ADDI.W   #$9,-(A1)
00001756  0621 00FF                444      ADDI.B   #$FF,-(A1)
0000175A  0621 0009                445      ADDI.B   #$9,-(A1)
0000175E  0621 0000                446      ADDI.B   #$0,-(A1)
00001762                           447      
00001762  58B8 0020                448      ADDI.L   #4,$20
00001766  06B9 00000009 00020000   449      ADDI.L   #9,$20000
00001770  06B9 00000000 00008000   450      ADDI.L   #0,$8000
0000177A  06B8 FFFFFFFF 0020       451      ADDI.L   #$FFFFFFFF,$20
00001782  0678 FFFF 0020           452      ADDI.W   #$FFFF,$20
00001788  0679 0000 00020000       453      ADDI.W   #$0,$20000
00001790  0679 0009 00008000       454      ADDI.W   #$9,$8000
00001798  0639 00FF 00008000       455      ADDI.B   #$FF,$8000
000017A0  0639 0009 00020000       456      ADDI.B   #$9,$20000
000017A8  0638 0000 0020           457      ADDI.B   #$0,$20
000017AE                           458  
000017AE  0801 0000                459      BTST     #0,D1
000017B2  0816 0001                460      BTST     #1,(A6)
000017B6  081E 0002                461      BTST     #2,(A6)+
000017BA  0826 0003                462      BTST     #3,-(A6)
000017BE  0838 001E 0000           463      BTST     #30,$0
000017C4  0838 001D 1000           464      BTST     #29,$1000
000017CA  0839 001E 00008000       465      BTST     #30,$8000
000017D2  0839 001F FFFF0000       466      BTST     #31,$FFFF0000
000017DA                           467      
000017DA  0101                     468      BTST     D0,D1
000017DC  0316                     469      BTST     D1,(A6)
000017DE  051E                     470      BTST     D2,(A6)+
000017E0  0726                     471      BTST     D3,-(A6)
000017E2  0B38 0000                472      BTST     D5,$0
000017E6  0D38 1000                473      BTST     D6,$1000
000017EA  0F39 00008000            474      BTST     D7,$8000
000017F0  0139 FFFF0000            475      BTST     D0,$FFFF0000
000017F6                           476  
000017F6  4E71                     477      NOP
000017F8                           478  
000017F8  4E75                     479      RTS
000017FA                           480  
000017FA  41F8 0000                481      LEA $0,A0
000017FE  43F8 1000                482      LEA $1000,A1
00001802  45F9 00008000            483      LEA $8000,A2
00001808  47F9 FFFF0000            484      LEA $FFFF0000,A3
0000180E  4BD4                     485      LEA (A4),A5  
00001810                           486  
00001810  4200                     487      CLR.B   D0
00001812  4212                     488      CLR.B   (A2)
00001814  421B                     489      CLR.B   (A3)+
00001816  4224                     490      CLR.B   -(A4)
00001818  4238 0000                491      CLR.B   $0
0000181C  4238 1000                492      CLR.B   $1000
00001820  4239 00008000            493      CLR.B   $8000
00001826  4239 FFEF0000            494      CLR.B   $FFEF0000
0000182C                           495      
0000182C  4240                     496      CLR.W   D0
0000182E  4252                     497      CLR.W   (A2)
00001830  425B                     498      CLR.W   (A3)+
00001832  4264                     499      CLR.W   -(A4)
00001834  4278 0000                500      CLR.W   $0
00001838  4278 1000                501      CLR.W   $1000
0000183C  4279 00008000            502      CLR.W   $8000
00001842  4279 FFEF0000            503      CLR.W   $FFEF0000
00001848                           504      
00001848  4280                     505      CLR.L   D0
0000184A  4292                     506      CLR.L   (A2)
0000184C  429B                     507      CLR.L   (A3)+
0000184E  42A4                     508      CLR.L   -(A4)
00001850  42B8 0000                509      CLR.L   $0
00001854  42B8 1000                510      CLR.L   $1000
00001858  42B9 00008000            511      CLR.L   $8000
0000185E  42B9 FFEF0000            512      CLR.L   $FFEF0000
00001864                           513      
00001864                           514  
00001864  4E96                     515      JSR     (A6)
00001866  4EB8 0000                516      JSR     $0
0000186A  4EB8 1000                517      JSR     $1000
0000186E  4EB9 00008000            518      JSR     $8000
00001874  4EB9 FFEE0000            519      JSR     $FFEE0000
0000187A                           520  
0000187A  4C97 00FE                521      MOVEM.W     (A7),D1-D7
0000187E  4CD6 00FC                522      MOVEM.L     (A6),D2-D7
00001882  4C97 FE00                523      MOVEM.W     (A7),A1-A7
00001886  4CD6 FC00                524      MOVEM.L     (A6),A2-A7
0000188A  4C9D 00F8                525      MOVEM.W     (A5)+,D3-D7
0000188E  4CDC 0080                526      MOVEM.L     (A4)+,D7-D7
00001892  4C9D F800                527      MOVEM.W     (A5)+,A3-A7
00001896  4CDC 8000                528      MOVEM.L     (A4)+,A7-A7
0000189A  4CB9 00FE 00020000       529      MOVEM.W     $20000,D1-D7
000018A2  4CF9 00FC 00020000       530      MOVEM.L     $20000,D2-D7
000018AA  4CB8 FE00 0100           531      MOVEM.W     $100,A1-A7
000018B0  4CF8 FC00 0100           532      MOVEM.L     $100,A2-A7
000018B6                           533      
000018B6  48E3 7F00                534      MOVEM.L     D1-D7,-(A3)
000018BA  48E2 007F                535      MOVEM.L     A1-A7,-(A2)
000018BE  48A1 1800                536      MOVEM.W     D3-D4,-(A1)
000018C2  48A0 007F                537      MOVEM.W     A1-A7,-(A0)
000018C6  48D3 00FE                538      MOVEM.L     D1-D7,(A3)
000018CA  48D2 FE00                539      MOVEM.L     A1-A7,(A2)
000018CE  4891 0018                540      MOVEM.W     D3-D4,(A1)
000018D2  4890 FE00                541      MOVEM.W     A1-A7,(A0)
000018D6  48F9 00FE 00020000       542      MOVEM.L     D1-D7,$20000
000018DE  48F8 FE00 0100           543      MOVEM.L     A1-A7,$100
000018E4  48B9 0018 00020000       544      MOVEM.W     D3-D4,$20000
000018EC  48B8 FE00 0100           545      MOVEM.W     A1-A7,$100
000018F2                           546  
000018F2  5200                     547      ADDQ.B      #1,D0
000018F4                           548  
000018F4  5616                     549      ADDQ.B      #3,(A6)
000018F6  581D                     550      ADDQ.B      #4,(A5)+
000018F8  5A24                     551      ADDQ.B      #5,-(A4)
000018FA  5E38 0000                552      ADDQ.B      #7,$0
000018FE  5038 1000                553      ADDQ.B      #8,$1000
00001902  5039 00008000            554      ADDQ.B      #8,$8000
00001908  5039 FFFF0001            555      ADDQ.B      #8,$FFFF0001
0000190E                           556      
0000190E  5240                     557      ADDQ.W      #1,D0
00001910  544F                     558      ADDQ.W      #2,A7
00001912  5656                     559      ADDQ.W      #3,(A6)
00001914  585D                     560      ADDQ.W      #4,(A5)+
00001916  5A64                     561      ADDQ.W      #5,-(A4)
00001918  5E78 0000                562      ADDQ.W      #7,$0
0000191C  5078 1000                563      ADDQ.W      #8,$1000
00001920  5079 00008000            564      ADDQ.W      #8,$8000
00001926  5079 FFFF0001            565      ADDQ.W      #8,$FFFF0001
0000192C                           566      
0000192C  5280                     567      ADDQ.L      #1,D0
0000192E  548F                     568      ADDQ.L      #2,A7
00001930  5696                     569      ADDQ.L      #3,(A6)
00001932  589D                     570      ADDQ.L      #4,(A5)+
00001934  5AA4                     571      ADDQ.L      #5,-(A4)
00001936  5EB8 0000                572      ADDQ.L      #7,$0
0000193A  50B8 1000                573      ADDQ.L      #8,$1000
0000193E  50B9 00008000            574      ADDQ.L      #8,$8000
00001944  50B9 FFFF0001            575      ADDQ.L      #8,$FFFF0001
0000194A                           576  
0000194A  727F                     577      MOVEQ       #127,D1
0000194C  7800                     578      MOVEQ       #0,D4
0000194E  7E01                     579      MOVEQ       #1,D7
00001950  7481                     580      MOVEQ       #-127,D2
00001952  74FF                     581      MOVEQ       #-1,D2
00001954  7407                     582      MOVEQ       #7,D2
00001956  7A02                     583      MOVEQ       #2,D5
00001958  7605                     584      MOVEQ       #5,D3
0000195A  7201                     585      MOVEQ       #1,D1
0000195C  7605                     586      MOVEQ       #5,D3
0000195E  7C00                     587      MOVEQ       #0,D6
00001960  7203                     588      MOVEQ       #3,D1
00001962                           589  
00001962  6400 479C                590      BCC         $6100
00001966  6400 E6B8                591      BCC         $20
0000196A  6400 E793                592      BCC         $FF
0000196E  6400 E590                593      BCC         $FFFFFF00
00001972                           594      
00001972  6E00 478C                595      BGT         $6100
00001976  6E00 E6A8                596      BGT         $20
0000197A  6E00 E783                597      BGT         $FF
0000197E  6E00 E580                598      BGT         $FFFFFF00
00001982                           599      
00001982  6F00 477C                600      BLE         $6100
00001986  6F00 E698                601      BLE         $20
0000198A  6F00 E773                602      BLE         $FF
0000198E  6F00 E570                603      BLE         $FFFFFF00
00001992                           604  
00001992                           605  
00001992  6200 476C                606      BHI         $6100
00001996  6200 E688                607      BHI         $20
0000199A  6200 E763                608      BHI         $FF
0000199E  6200 E560                609      BHI         $FFFFFF00
000019A2                           610      
000019A2  6300 475C                611      BLS         $6100
000019A6  6300 E678                612      BLS         $20
000019AA  6300 E753                613      BLS         $FF
000019AE  6300 E550                614      BLS         $FFFFFF00
000019B2                           615      
000019B2  6500 474C                616      BCS         $6100
000019B6  6500 E668                617      BCS         $20
000019BA  6500 E743                618      BCS         $FF
000019BE  6500 E540                619      BCS         $FFFFFF00
000019C2                           620      
000019C2  6600 473C                621      BNE         $6100
000019C6  6600 E658                622      BNE         $20
000019CA  6600 E733                623      BNE         $FF
000019CE  6600 E530                624      BNE         $FFFFFF00
000019D2                           625      
000019D2  6700 472C                626      BEQ         $6100
000019D6  6700 E648                627      BEQ         $20
000019DA  6700 E723                628      BEQ         $FF
000019DE  6700 E520                629      BEQ         $FFFFFF00
000019E2                           630      
000019E2  6800 471C                631      BVC         $6100
000019E6  6800 E638                632      BVC         $20
000019EA  6800 E713                633      BVC         $FF
000019EE  6800 E510                634      BVC         $FFFFFF00
000019F2                           635      
000019F2  6900 470C                636      BVS         $6100
000019F6  6900 E628                637      BVS         $20
000019FA  6900 E703                638      BVS         $FF
000019FE  6900 E500                639      BVS         $FFFFFF00
00001A02                           640      
00001A02  6A00 46FC                641      BPL         $6100
00001A06  6A00 E618                642      BPL         $20
00001A0A  6A00 E6F3                643      BPL         $FF
00001A0E  6A00 E4F0                644      BPL         $FFFFFF00
00001A12                           645      
00001A12  6B00 46EC                646      BMI         $6100
00001A16  6B00 E608                647      BMI         $20
00001A1A  6B00 E6E3                648      BMI         $FF
00001A1E  6B00 E4E0                649      BMI         $FFFFFF00
00001A22                           650      
00001A22  6C00 46DC                651      BGE         $6100
00001A26  6C00 E5F8                652      BGE         $20
00001A2A  6C00 E6D3                653      BGE         $FF
00001A2E  6C00 E4D0                654      BGE         $FFFFFF00
00001A32                           655      
00001A32  6D00 46CC                656      BLT         $6100
00001A36  6D00 E5E8                657      BLT         $20
00001A3A  6D00 E6C3                658      BLT         $FF
00001A3E  6D00 E4C0                659      BLT         $FFFFFF00
00001A42                           660  
00001A42  8EC1                     661      DIVU        D1,D7
00001A44  8CD3                     662      DIVU        (A3),D6
00001A46  86D9                     663      DIVU        (A1)+,D3
00001A48  88E7                     664      DIVU        -(A7),D4
00001A4A  8CF8 0000                665      DIVU        $0,D6
00001A4E  88F8 1000                666      DIVU        $1000,D4
00001A52  88F9 00008000            667      DIVU        $8000,D4
00001A58  88F9 FE00FE00            668      DIVU        $FE00FE00,D4
00001A5E  88FC FFFF                669      DIVU        #$FFFF,D4
00001A62  88FC 00FF                670      DIVU        #$FF,D4
00001A66                           671  
00001A66  8801                     672      OR.B        D1,D4
00001A68  8A15                     673      OR.B        (A5),D5
00001A6A  8C1B                     674      OR.B        (A3)+,D6
00001A6C  8E22                     675      OR.B        -(A2),D7
00001A6E  8C38 0000                676      OR.B        $0,D6
00001A72  8038 1000                677      OR.B        $1000,D0
00001A76  8239 00008000            678      OR.B        $8000,D1
00001A7C  8439 FF0FF0FF            679      OR.B        $FF0FF0FF,D2
00001A82  863C 0000                680      OR.B        #0,D3
00001A86  883C 00FF                681      OR.B        #$FF,D4
00001A8A  8111                     682      OR.B        D0,(A1)
00001A8C  851B                     683      OR.B        D2,(A3)+
00001A8E  8925                     684      OR.B        D4,-(A5)
00001A90  8D38 0000                685      OR.B        D6,$0
00001A94  8138 1000                686      OR.B        D0,$1000
00001A98  8339 00008000            687      OR.B        D1,$8000
00001A9E  8539 FF0FF0FF            688      OR.B        D2,$FF0FF0FF
00001AA4                           689      
00001AA4  8841                     690      OR.W        D1,D4
00001AA6  8A55                     691      OR.W        (A5),D5
00001AA8  8C5B                     692      OR.W        (A3)+,D6
00001AAA  8E62                     693      OR.W        -(A2),D7
00001AAC  8C78 0000                694      OR.W        $0,D6
00001AB0  8078 1000                695      OR.W        $1000,D0
00001AB4  8279 00008000            696      OR.W        $8000,D1
00001ABA  8479 FF0FF0FF            697      OR.W        $FF0FF0FF,D2
00001AC0  867C 0000                698      OR.W        #0,D3
00001AC4  887C 00FF                699      OR.W        #$FF,D4
00001AC8  887C 23FF                700      OR.W        #$23FF,D4
00001ACC  8151                     701      OR.W        D0,(A1)
00001ACE  855B                     702      OR.W        D2,(A3)+
00001AD0  8965                     703      OR.W        D4,-(A5)
00001AD2  8D78 0000                704      OR.W        D6,$0
00001AD6  8178 1000                705      OR.W        D0,$1000
00001ADA  8379 00008000            706      OR.W        D1,$8000
00001AE0  8579 FF0FF0FF            707      OR.W        D2,$FF0FF0FF
00001AE6                           708      
00001AE6  8881                     709      OR.L        D1,D4
00001AE8  8A95                     710      OR.L        (A5),D5
00001AEA  8C9B                     711      OR.L        (A3)+,D6
00001AEC  8EA2                     712      OR.L        -(A2),D7
00001AEE  8CB8 0000                713      OR.L        $0,D6
00001AF2  80B8 1000                714      OR.L        $1000,D0
00001AF6  82B9 00008000            715      OR.L        $8000,D1
00001AFC  84B9 FF0FF0FF            716      OR.L        $FF0FF0FF,D2
00001B02  86BC 00000000            717      OR.L        #0,D3
00001B08  88BC 000000FF            718      OR.L        #$FF,D4
00001B0E  88BC 000023FF            719      OR.L        #$23FF,D4
00001B14  88BC FF0023FF            720      OR.L        #$FF0023FF,D4
00001B1A  8191                     721      OR.L        D0,(A1)
00001B1C  859B                     722      OR.L        D2,(A3)+
00001B1E  89A5                     723      OR.L        D4,-(A5)
00001B20  8DB8 0000                724      OR.L        D6,$0
00001B24  81B8 1000                725      OR.L        D0,$1000
00001B28  83B9 00008000            726      OR.L        D1,$8000
00001B2E  85B9 FF0FF0FF            727      OR.L        D2,$FF0FF0FF
00001B34                           728  
00001B34                           729  
00001B34  9801                     730      SUB.B        D1,D4
00001B36  9A15                     731      SUB.B        (A5),D5
00001B38  9C1B                     732      SUB.B        (A3)+,D6
00001B3A  9E22                     733      SUB.B        -(A2),D7
00001B3C  9C38 0000                734      SUB.B        $0,D6
00001B40  9038 1000                735      SUB.B        $1000,D0
00001B44  9239 00008000            736      SUB.B        $8000,D1
00001B4A  9439 FF0FF0FF            737      SUB.B        $FF0FF0FF,D2
00001B50  0403 0000                738      SUB.B        #0,D3
00001B54  0404 00FF                739      SUB.B        #$FF,D4
00001B58  9111                     740      SUB.B        D0,(A1)
00001B5A  951B                     741      SUB.B        D2,(A3)+
00001B5C  9925                     742      SUB.B        D4,-(A5)
00001B5E  9D38 0000                743      SUB.B        D6,$0
00001B62  9138 1000                744      SUB.B        D0,$1000
00001B66  9339 00008000            745      SUB.B        D1,$8000
00001B6C  9539 FF0FF0FF            746      SUB.B        D2,$FF0FF0FF
00001B72                           747      
00001B72  9841                     748      SUB.W        D1,D4
00001B74  9049                     749      SUB.W        A1,D0
00001B76  9A55                     750      SUB.W        (A5),D5
00001B78  9C5B                     751      SUB.W        (A3)+,D6
00001B7A  9E62                     752      SUB.W        -(A2),D7
00001B7C  9C78 0000                753      SUB.W        $0,D6
00001B80  9078 1000                754      SUB.W        $1000,D0
00001B84  9279 00008000            755      SUB.W        $8000,D1
00001B8A  9479 FF0FF0FF            756      SUB.W        $FF0FF0FF,D2
00001B90  0443 0000                757      SUB.W        #0,D3
00001B94  0444 00FF                758      SUB.W        #$FF,D4
00001B98  0444 23FF                759      SUB.W        #$23FF,D4
00001B9C  9151                     760      SUB.W        D0,(A1)
00001B9E  955B                     761      SUB.W        D2,(A3)+
00001BA0  9965                     762      SUB.W        D4,-(A5)
00001BA2  9D78 0000                763      SUB.W        D6,$0
00001BA6  9178 1000                764      SUB.W        D0,$1000
00001BAA  9379 00008000            765      SUB.W        D1,$8000
00001BB0  9579 FF0FF0FF            766      SUB.W        D2,$FF0FF0FF
00001BB6                           767      
00001BB6  9881                     768      SUB.L        D1,D4
00001BB8  908A                     769      SUB.L        A2,D0
00001BBA  9A95                     770      SUB.L        (A5),D5
00001BBC  9C9B                     771      SUB.L        (A3)+,D6
00001BBE  9EA2                     772      SUB.L        -(A2),D7
00001BC0  9CB8 0000                773      SUB.L        $0,D6
00001BC4  90B8 1000                774      SUB.L        $1000,D0
00001BC8  92B9 00008000            775      SUB.L        $8000,D1
00001BCE  94B9 FF0FF0FF            776      SUB.L        $FF0FF0FF,D2
00001BD4  0483 00000000            777      SUB.L        #0,D3
00001BDA  0484 000000FF            778      SUB.L        #$FF,D4
00001BE0  0484 000023FF            779      SUB.L        #$23FF,D4
00001BE6  0484 FF0023FF            780      SUB.L        #$FF0023FF,D4
00001BEC  9191                     781      SUB.L        D0,(A1)
00001BEE  959B                     782      SUB.L        D2,(A3)+
00001BF0  99A5                     783      SUB.L        D4,-(A5)
00001BF2  9DB8 0000                784      SUB.L        D6,$0
00001BF6  91B8 1000                785      SUB.L        D0,$1000
00001BFA  93B9 00008000            786      SUB.L        D1,$8000
00001C00  95B9 FF0FF0FF            787      SUB.L        D2,$FF0FF0FF
00001C06                           788      
00001C06                           789  
00001C06  B801                     790      CMP.B        D1,D4
00001C08  BA15                     791      CMP.B        (A5),D5
00001C0A  BC1B                     792      CMP.B        (A3)+,D6
00001C0C  BE22                     793      CMP.B        -(A2),D7
00001C0E  BC38 0000                794      CMP.B        $0,D6
00001C12  B038 1000                795      CMP.B        $1000,D0
00001C16  B239 00008000            796      CMP.B        $8000,D1
00001C1C  B439 FF0FF0FF            797      CMP.B        $FF0FF0FF,D2
00001C22  B63C 0000                798      CMP.B        #0,D3
00001C26  B83C 00FF                799      CMP.B        #$FF,D4
00001C2A                           800      
00001C2A  B841                     801      CMP.W        D1,D4
00001C2C  B049                     802      CMP.W        A1,D0
00001C2E  BA55                     803      CMP.W        (A5),D5
00001C30  BC5B                     804      CMP.W        (A3)+,D6
00001C32  BE62                     805      CMP.W        -(A2),D7
00001C34  BC78 0000                806      CMP.W        $0,D6
00001C38  B078 1000                807      CMP.W        $1000,D0
00001C3C  B279 00008000            808      CMP.W        $8000,D1
00001C42  B479 FF0FF0FF            809      CMP.W        $FF0FF0FF,D2
00001C48  B67C 0000                810      CMP.W        #0,D3
00001C4C  B87C 00FF                811      CMP.W        #$FF,D4
00001C50  B87C 23FF                812      CMP.W        #$23FF,D4
00001C54                           813      
00001C54  B881                     814      CMP.L        D1,D4
00001C56  B08A                     815      CMP.L        A2,D0
00001C58  BA95                     816      CMP.L        (A5),D5
00001C5A  BC9B                     817      CMP.L        (A3)+,D6
00001C5C  BEA2                     818      CMP.L        -(A2),D7
00001C5E  BCB8 0000                819      CMP.L        $0,D6
00001C62  B0B8 1000                820      CMP.L        $1000,D0
00001C66  B2B9 00008000            821      CMP.L        $8000,D1
00001C6C  B4B9 FF0FF0FF            822      CMP.L        $FF0FF0FF,D2
00001C72  B6BC 00000000            823      CMP.L        #0,D3
00001C78  B8BC 000000FF            824      CMP.L        #$FF,D4
00001C7E  B8BC 000023FF            825      CMP.L        #$23FF,D4
00001C84  B8BC FF0023FF            826      CMP.L        #$FF0023FF,D4
00001C8A                           827  
00001C8A  D801                     828      ADD.B        D1,D4
00001C8C  DA15                     829      ADD.B        (A5),D5
00001C8E  DC1B                     830      ADD.B        (A3)+,D6
00001C90  DE22                     831      ADD.B        -(A2),D7
00001C92  DC38 0000                832      ADD.B        $0,D6
00001C96  D038 1000                833      ADD.B        $1000,D0
00001C9A  D239 00008000            834      ADD.B        $8000,D1
00001CA0  D439 FF0FF0FF            835      ADD.B        $FF0FF0FF,D2
00001CA6  0603 0000                836      ADD.B        #0,D3
00001CAA  0604 00FF                837      ADD.B        #$FF,D4
00001CAE  D111                     838      ADD.B        D0,(A1)
00001CB0  D51B                     839      ADD.B        D2,(A3)+
00001CB2  D925                     840      ADD.B        D4,-(A5)
00001CB4  DD38 0000                841      ADD.B        D6,$0
00001CB8  D138 1000                842      ADD.B        D0,$1000
00001CBC  D339 00008000            843      ADD.B        D1,$8000
00001CC2  D539 FF0FF0FF            844      ADD.B        D2,$FF0FF0FF
00001CC8                           845      
00001CC8  D841                     846      ADD.W        D1,D4
00001CCA  D049                     847      ADD.W        A1,D0
00001CCC  DA55                     848      ADD.W        (A5),D5
00001CCE  DC5B                     849      ADD.W        (A3)+,D6
00001CD0  DE62                     850      ADD.W        -(A2),D7
00001CD2  DC78 0000                851      ADD.W        $0,D6
00001CD6  D078 1000                852      ADD.W        $1000,D0
00001CDA  D279 00008000            853      ADD.W        $8000,D1
00001CE0  D479 FF0FF0FF            854      ADD.W        $FF0FF0FF,D2
00001CE6  0643 0000                855      ADD.W        #0,D3
00001CEA  0644 00FF                856      ADD.W        #$FF,D4
00001CEE  0644 23FF                857      ADD.W        #$23FF,D4
00001CF2  D151                     858      ADD.W        D0,(A1)
00001CF4  D55B                     859      ADD.W        D2,(A3)+
00001CF6  D965                     860      ADD.W        D4,-(A5)
00001CF8  DD78 0000                861      ADD.W        D6,$0
00001CFC  D178 1000                862      ADD.W        D0,$1000
00001D00  D379 00008000            863      ADD.W        D1,$8000
00001D06  D579 FF0FF0FF            864      ADD.W        D2,$FF0FF0FF
00001D0C                           865      
00001D0C  D881                     866      ADD.L        D1,D4
00001D0E  D08A                     867      ADD.L        A2,D0
00001D10  DA95                     868      ADD.L        (A5),D5
00001D12  DC9B                     869      ADD.L        (A3)+,D6
00001D14  DEA2                     870      ADD.L        -(A2),D7
00001D16  DCB8 0000                871      ADD.L        $0,D6
00001D1A  D0B8 1000                872      ADD.L        $1000,D0
00001D1E  D2B9 00008000            873      ADD.L        $8000,D1
00001D24  D4B9 FF0FF0FF            874      ADD.L        $FF0FF0FF,D2
00001D2A  0683 00000000            875      ADD.L        #0,D3
00001D30  0684 000000FF            876      ADD.L        #$FF,D4
00001D36  0684 000023FF            877      ADD.L        #$23FF,D4
00001D3C  0684 FF0023FF            878      ADD.L        #$FF0023FF,D4
00001D42  D191                     879      ADD.L        D0,(A1)
00001D44  D59B                     880      ADD.L        D2,(A3)+
00001D46  D9A5                     881      ADD.L        D4,-(A5)
00001D48  DDB8 0000                882      ADD.L        D6,$0
00001D4C  D1B8 1000                883      ADD.L        D0,$1000
00001D50  D3B9 00008000            884      ADD.L        D1,$8000
00001D56  D5B9 FF0FF0FF            885      ADD.L        D2,$FF0FF0FF
00001D5C                           886  
00001D5C  D5FC 11111111            887      ADDA.L   #$11111111,A2
00001D62  D5FC 00008000            888      ADDA.L   #$8000,A2
00001D68  D5FC 00000000            889      ADDA.L   #$0,A2
00001D6E  D5FC 00001111            890      ADDA.L   #$1111,A2
00001D74  D5F9 11111111            891      ADDA.L   $11111111,A2
00001D7A  D5F8 1111                892      ADDA.L   $1111,A2
00001D7E  D5F8 0000                893      ADDA.L   $0,A2
00001D82  D3F8 1111                894      ADDA.L   $1111,A1
00001D86  DFC1                     895      ADDA.L   D1,A7
00001D88  DDC9                     896      ADDA.L   A1,A6
00001D8A  DBD0                     897      ADDA.L   (A0),A5
00001D8C  D9DF                     898      ADDA.L   (A7)+,A4
00001D8E  D9E7                     899      ADDA.L   -(A7),A4
00001D90                           900      
00001D90  D4FC 1111                901      ADDA.W   #$1111,A2
00001D94  D4FC 8000                902      ADDA.W   #$8000,A2
00001D98  D4FC 0000                903      ADDA.W   #$0,A2
00001D9C  D4FC 1111                904      ADDA.W   #$1111,A2
00001DA0  D4F9 11111111            905      ADDA.W   $11111111,A2
00001DA6  D4F8 1111                906      ADDA.W   $1111,A2
00001DAA  D4F8 0000                907      ADDA.W   $0,A2
00001DAE  D2F8 1111                908      ADDA.W   $1111,A1
00001DB2  DEC1                     909      ADDA.W   D1,A7
00001DB4  DCC9                     910      ADDA.W   A1,A6
00001DB6  DAD0                     911      ADDA.W   (A0),A5
00001DB8  D8DF                     912      ADDA.W   (A7)+,A4
00001DBA  D8E7                     913      ADDA.W   -(A7),A4
00001DBC                           914      
00001DBC                           915  
00001DBC  CFC1                     916      MULS        D1,D7
00001DBE  CDD3                     917      MULS        (A3),D6
00001DC0  C7D9                     918      MULS        (A1)+,D3
00001DC2  C9E7                     919      MULS        -(A7),D4
00001DC4  CDF8 0000                920      MULS        $0,D6
00001DC8  C9F8 1000                921      MULS        $1000,D4
00001DCC  C9F9 00008000            922      MULS        $8000,D4
00001DD2  C9F9 FE00FE00            923      MULS        $FE00FE00,D4
00001DD8  C9FC FFFF                924      MULS        #$FFFF,D4
00001DDC  C9FC 00FF                925      MULS        #$FF,D4
00001DE0                           926  
00001DE0  C801                     927      AND.B        D1,D4
00001DE2  CA15                     928      AND.B        (A5),D5
00001DE4  CC1B                     929      AND.B        (A3)+,D6
00001DE6  CE22                     930      AND.B        -(A2),D7
00001DE8  CC38 0000                931      AND.B        $0,D6
00001DEC  C038 1000                932      AND.B        $1000,D0
00001DF0  C239 00008000            933      AND.B        $8000,D1
00001DF6  C439 FF0FF0FF            934      AND.B        $FF0FF0FF,D2
00001DFC  C63C 0000                935      AND.B        #0,D3
00001E00  C83C 00FF                936      AND.B        #$FF,D4
00001E04  C111                     937      AND.B        D0,(A1)
00001E06  C51B                     938      AND.B        D2,(A3)+
00001E08  C925                     939      AND.B        D4,-(A5)
00001E0A  CD38 0000                940      AND.B        D6,$0
00001E0E  C138 1000                941      AND.B        D0,$1000
00001E12  C339 00008000            942      AND.B        D1,$8000
00001E18  C539 FF0FF0FF            943      AND.B        D2,$FF0FF0FF
00001E1E                           944      
00001E1E  C841                     945      AND.W        D1,D4
00001E20  CA55                     946      AND.W        (A5),D5
00001E22  CC5B                     947      AND.W        (A3)+,D6
00001E24  CE62                     948      AND.W        -(A2),D7
00001E26  CC78 0000                949      AND.W        $0,D6
00001E2A  C078 1000                950      AND.W        $1000,D0
00001E2E  C279 00008000            951      AND.W        $8000,D1
00001E34  C479 FF0FF0FF            952      AND.W        $FF0FF0FF,D2
00001E3A  C67C 0000                953      AND.W        #0,D3
00001E3E  C87C 00FF                954      AND.W        #$FF,D4
00001E42  C87C 23FF                955      AND.W        #$23FF,D4
00001E46  C151                     956      AND.W        D0,(A1)
00001E48  C55B                     957      AND.W        D2,(A3)+
00001E4A  C965                     958      AND.W        D4,-(A5)
00001E4C  CD78 0000                959      AND.W        D6,$0
00001E50  C178 1000                960      AND.W        D0,$1000
00001E54  C379 00008000            961      AND.W        D1,$8000
00001E5A  C579 FF0FF0FF            962      AND.W        D2,$FF0FF0FF
00001E60                           963      
00001E60  C881                     964      AND.L        D1,D4
00001E62  CA95                     965      AND.L        (A5),D5
00001E64  CC9B                     966      AND.L        (A3)+,D6
00001E66  CEA2                     967      AND.L        -(A2),D7
00001E68  CCB8 0000                968      AND.L        $0,D6
00001E6C  C0B8 1000                969      AND.L        $1000,D0
00001E70  C2B9 00008000            970      AND.L        $8000,D1
00001E76  C4B9 FF0FF0FF            971      AND.L        $FF0FF0FF,D2
00001E7C  C6BC 00000000            972      AND.L        #0,D3
00001E82  C8BC 000000FF            973      AND.L        #$FF,D4
00001E88  C8BC 000023FF            974      AND.L        #$23FF,D4
00001E8E  C8BC FF0023FF            975      AND.L        #$FF0023FF,D4
00001E94  C191                     976      AND.L        D0,(A1)
00001E96  C59B                     977      AND.L        D2,(A3)+
00001E98  C9A5                     978      AND.L        D4,-(A5)
00001E9A  CDB8 0000                979      AND.L        D6,$0
00001E9E  C1B8 1000                980      AND.L        D0,$1000
00001EA2  C3B9 00008000            981      AND.L        D1,$8000
00001EA8  C5B9 FF0FF0FF            982      AND.L        D2,$FF0FF0FF
00001EAE                           983  
00001EAE                           984  
00001EAE  E34A                     985      LSL.W     #1,D2
00001EB0  E242                     986      ASR.W     #1,D2
00001EB2  E342                     987      ASL.W     #1,D2
00001EB4  E35A                     988      ROL.W     #1,D2
00001EB6  E25A                     989      ROR.W     #1,D2
00001EB8  E14A                     990      LSL.W     #8,D2
00001EBA  E042                     991      ASR.W     #8,D2
00001EBC  E142                     992      ASL.W     #8,D2
00001EBE  E15A                     993      ROL.W     #8,D2
00001EC0  E05A                     994      ROR.W     #8,D2
00001EC2                           995       
00001EC2  E30A                     996      LSL.B     #1,D2
00001EC4  E202                     997      ASR.B     #1,D2
00001EC6  E302                     998      ASL.B     #1,D2
00001EC8  E31A                     999      ROL.B     #1,D2
00001ECA  E21A                    1000      ROR.B     #1,D2
00001ECC  E10A                    1001      LSL.B     #8,D2
00001ECE  E002                    1002      ASR.B     #8,D2
00001ED0  E102                    1003      ASL.B     #8,D2
00001ED2  E11A                    1004      ROL.B     #8,D2
00001ED4  E01A                    1005      ROR.B     #8,D2
00001ED6                          1006      
00001ED6  E38A                    1007      LSL.L     #1,D2
00001ED8  E282                    1008      ASR.L     #1,D2
00001EDA  E382                    1009      ASL.L     #1,D2
00001EDC  E39A                    1010      ROL.L     #1,D2
00001EDE  E29A                    1011      ROR.L     #1,D2
00001EE0  E18A                    1012      LSL.L     #8,D2
00001EE2  E082                    1013      ASR.L     #8,D2
00001EE4  E182                    1014      ASL.L     #8,D2
00001EE6  E19A                    1015      ROL.L     #8,D2
00001EE8  E09A                    1016      ROR.L     #8,D2
00001EEA                          1017      
00001EEA  E34A                    1018      LSL.W     #1,D2
00001EEC  E242                    1019      ASR.W     #1,D2
00001EEE  E342                    1020      ASL.W     #1,D2
00001EF0  E35A                    1021      ROL.W     #1,D2
00001EF2  E25A                    1022      ROR.W     #1,D2
00001EF4  E14A                    1023      LSL.W     #8,D2
00001EF6  E042                    1024      ASR.W     #8,D2
00001EF8  E142                    1025      ASL.W     #8,D2
00001EFA  E15A                    1026      ROL.W     #8,D2
00001EFC  E05A                    1027      ROR.W     #8,D2
00001EFE                          1028       
00001EFE  E30A                    1029      LSL.B     #1,D2
00001F00  E202                    1030      ASR.B     #1,D2
00001F02  E302                    1031      ASL.B     #1,D2
00001F04  E31A                    1032      ROL.B     #1,D2
00001F06  E21A                    1033      ROR.B     #1,D2
00001F08  E10A                    1034      LSL.B     #8,D2
00001F0A  E002                    1035      ASR.B     #8,D2
00001F0C  E102                    1036      ASL.B     #8,D2
00001F0E  E11A                    1037      ROL.B     #8,D2
00001F10  E01A                    1038      ROR.B     #8,D2
00001F12                          1039      
00001F12  E38A                    1040      LSL.L     #1,D2
00001F14  E282                    1041      ASR.L     #1,D2
00001F16  E382                    1042      ASL.L     #1,D2
00001F18  E39A                    1043      ROL.L     #1,D2
00001F1A  E29A                    1044      ROR.L     #1,D2
00001F1C  E18A                    1045      LSL.L     #8,D2
00001F1E  E082                    1046      ASR.L     #8,D2
00001F20  E182                    1047      ASL.L     #8,D2
00001F22  E19A                    1048      ROL.L     #8,D2
00001F24  E09A                    1049      ROR.L     #8,D2
00001F26                          1050      
00001F26  E36A                    1051      LSL.W     D1,D2
00001F28  E262                    1052      ASR.W     D1,D2
00001F2A  E362                    1053      ASL.W     D1,D2
00001F2C  E37A                    1054      ROL.W     D1,D2
00001F2E  E27A                    1055      ROR.W     D1,D2
00001F30  E36A                    1056      LSL.W     D1,D2
00001F32  E262                    1057      ASR.W     D1,D2
00001F34  E362                    1058      ASL.W     D1,D2
00001F36  E37A                    1059      ROL.W     D1,D2
00001F38  E27A                    1060      ROR.W     D1,D2
00001F3A                          1061       
00001F3A  EB2A                    1062      LSL.B     D5,D2
00001F3C  EA22                    1063      ASR.B     D5,D2
00001F3E  EB22                    1064      ASL.B     D5,D2
00001F40  EB3A                    1065      ROL.B     D5,D2
00001F42  EA3A                    1066      ROR.B     D5,D2
00001F44  EB2A                    1067      LSL.B     D5,D2
00001F46  EA22                    1068      ASR.B     D5,D2
00001F48  EB22                    1069      ASL.B     D5,D2
00001F4A  EB3A                    1070      ROL.B     D5,D2
00001F4C  EA3A                    1071      ROR.B     D5,D2
00001F4E                          1072      
00001F4E  EFAA                    1073      LSL.L     D7,D2
00001F50  EEA2                    1074      ASR.L     D7,D2
00001F52  EFA2                    1075      ASL.L     D7,D2
00001F54  EFBA                    1076      ROL.L     D7,D2
00001F56  EEBA                    1077      ROR.L     D7,D2
00001F58  EFAA                    1078      LSL.L     D7,D2
00001F5A  EEA2                    1079      ASR.L     D7,D2
00001F5C  EFA2                    1080      ASL.L     D7,D2
00001F5E  EFBA                    1081      ROL.L     D7,D2
00001F60  EEBA                    1082      ROR.L     D7,D2
00001F62                          1083         
00001F62  E3F8 0000               1084      LSL      $0 *Word is only valid case.
00001F66  E2F8 0000               1085      LSR      $0
00001F6A  E1F8 0000               1086      ASL      $0
00001F6E  E0F8 0000               1087      ASR      $0
00001F72  E7F8 0000               1088      ROL      $0
00001F76  E6F8 0000               1089      ROR      $0
00001F7A                          1090         
00001F7A  E3F9 00010000           1091      LSL      $10000 *Word is only valid case.
00001F80  E2F9 00010000           1092      LSR      $10000
00001F86  E1F9 00010000           1093      ASL      $10000
00001F8C  E0F9 00010000           1094      ASR      $10000
00001F92  E7F9 00010000           1095      ROL      $10000
00001F98  E6F9 00010000           1096      ROR      $10000
00001F9E                          1097         
00001F9E  E3D1                    1098      LSL      (A1) *Word is only valid case.
00001FA0  E2D1                    1099      LSR      (A1)
00001FA2  E1D1                    1100      ASL      (A1)
00001FA4  E0D1                    1101      ASR      (A1)
00001FA6  E7D1                    1102      ROL      (A1)
00001FA8  E6D1                    1103      ROR      (A1)
00001FAA                          1104         
00001FAA  E3D9                    1105      LSL      (A1)+ *Word is only valid case.
00001FAC  E2D9                    1106      LSR      (A1)+
00001FAE  E1D9                    1107      ASL      (A1)+
00001FB0  E0D9                    1108      ASR      (A1)+
00001FB2  E7D9                    1109      ROL      (A1)+
00001FB4  E6D9                    1110      ROR      (A1)+
00001FB6                          1111         
00001FB6  E3E1                    1112      LSL      -(A1) *Word is only valid case.
00001FB8  E2E1                    1113      LSR      -(A1)
00001FBA  E1E1                    1114      ASL      -(A1)
00001FBC  E0E1                    1115      ASR      -(A1)
00001FBE  E7E1                    1116      ROL      -(A1)
00001FC0  E6E1                    1117      ROR      -(A1)
00001FC2                          1118  
00001FC2                          1119    
00001FC2  8081                    1120      OR.L     D1,D0
00001FC4                          1121         
00001FC4  9280                    1122      SUB.L    D0,D1
00001FC6                          1123         
00001FC6  B441                    1124      CMP.W    D1,D2
00001FC8                          1125  
00001FC8  6000 00D2               1126      BRA      SKIP
00001FCC                          1127         
00001FCC  4281                    1128      CLR.L    D1
00001FCE                          1129         
00001FCE  4EB9 0000209A           1130      JSR      DUMMY_SUB
00001FD4                          1131         
00001FD4  5200                    1132      ADDQ.B   #1,D0
00001FD6                          1133         
00001FD6  7201                    1134      MOVEQ.L  #1,D1
00001FD8                          1135         
00001FD8  80C1                    1136      DIVU.W   D1,D0
00001FDA                          1137      
00001FDA  6000 000A               1138      BRA     DO_NOTHING
00001FDE  B67C 0000               1139      CMP     #0,D3
00001FE2  6700 0002               1140      BEQ     DO_NOTHING
00001FE6                          1141      
00001FE6                          1142  DO_NOTHING
00001FE6  E2AA                    1143      LSR.L   D1,D2
00001FE8  E36A                    1144      LSL.W   D1,D2
00001FEA  E222                    1145      ASR.B   D1,D2
00001FEC  E362                    1146      ASL.W   D1,D2
00001FEE  E37A                    1147      ROL.W    D1,D2
00001FF0  E27A                    1148      ROR.W    D1,D2
00001FF2                          1149      
00001FF2  88C3                    1150      DIVU   D3,D4
00001FF4                          1151  
00001FF4  C9C3                    1152      MULS    D3,D4
00001FF6                          1153      
00001FF6  0401 0044               1154      SUB.B   #68,D1
00001FFA  9803                    1155      SUB.B   D3,D4
00001FFC  9C13                    1156      SUB.B   (A3),D6
00001FFE  9A23                    1157      SUB.B   -(A3),D5
00002000  9F23                    1158      SUB.B   D7,-(A3)
00002002                          1159      
00002002  4281                    1160      CLR.L   D1
00002004  4202                    1161      CLR.B   D2
00002006  4245                    1162      CLR.W   D5
00002008  4294                    1163      CLR.L   (A4)
0000200A  425C                    1164      CLR.W   (A4)+
0000200C  4264                    1165      CLR.W   -(A4)
0000200E                          1166      
0000200E  247C 11111111           1167      MOVEA.L   #$11111111,A2
00002014  247C 00001111           1168      MOVEA.L   #$1111,A2
0000201A                          1169      
0000201A  D481                    1170      ADD.L    D1,D2
0000201C  DE05                    1171      ADD.B    D5,D7
0000201E  D843                    1172      ADD.W    D3,D4
00002020  0686 00000022           1173      ADD.L    #34,D6
00002026  D481                    1174      ADD.L    D1,D2
00002028  DE05                    1175      ADD.B    D5,D7
0000202A  D843                    1176      ADD.W    D3,D4
0000202C  0686 00000022           1177      ADD.L    #34,D6
00002032  5801                    1178      ADD.B   #4,D1
00002034                          1179  
00002034  0801 0000               1180      BTST     #0,D1
00002038  0816 0006               1181      BTST     #6,(A6)
0000203C  081D 000C               1182      BTST     #12,(A5)+
00002040  0824 0003               1183      BTST     #3,-(A4)
00002044  0838 0002 1234          1184      BTST     #2,$1234
0000204A  0839 0007 12341234      1185      BTST     #7,$12341234
00002052  0507                    1186      BTST     D2,D7
00002054  073C 0004               1187      BTST     D3,#4
00002058                          1188         
00002058  C5C1                    1189      MULS.W   D1,D2
0000205A  C5C1                    1190      MULS.W   D1,D2
0000205C                          1191  
0000205C  4E71                    1192      NOP
0000205E                          1193         
0000205E  6400 003C               1194      BCC     SKIP        *6400   Condition: %0100
00002062  6400 0038               1195      BCC     INPUT       *6400   Condition: %0100
00002066  6500 0034               1196      BCS     SKIP        *6500   Condition: %0101
0000206A  6700 0030               1197      BEQ     SKIP        *6700   Condition: %0111
0000206E  6C00 002C               1198      BGE     SKIP        *6C00   Condition: %1100
00002072  6E00 0028               1199      BGT     SKIP        *6E00   Condition: %1110
00002076  6200 0024               1200      BHI     SKIP        *6200   Condition: %0010
0000207A  6F00 0020               1201      BLE     SKIP        *6F00   Condition: %1111
0000207E  6300 001C               1202      BLS     SKIP        *6300   Condition: %0011
00002082  6D00 0018               1203      BLT     SKIP        *6D00   Condition: %1101
00002086  6B00 0014               1204      BMI     SKIP        *6B00   Condition: %1011
0000208A  6600 0010               1205      BNE     SKIP        *6600   Condition: %0110
0000208E  6A00 000C               1206      BPL     SKIP        *6A00   Condition: %1010
00002092  6800 0008               1207      BVC     SKIP        *6800   Condition: %1000
00002096  6900 0004               1208      BVS     SKIP        *6900   Condition: %1001
0000209A                          1209         
0000209A                          1210  DUMMY_SUB
0000209A  4E75                    1211      RTS
0000209C                          1212  SKIP
0000209C                          1213  INPUT
0000209C  FFFF FFFF               1214      SIMHALT             ; halt simulator
000020A0                          1215  
000020A0                          1216  
000020A0                          1217  
000020A0                          1218  
000020A0                          1219  
000020A0                          1220  
000020A0                          1221  
000020A0                          1222  -------------------- end include --------------------
000020A0                          1223             
000020A0                          1224  EXIT                 
000020A0  FFFF FFFF               1225         SIMHALT   
000020A4                          1226  
000020A4                          1227  
000020A4                          1228  **TODO: PRINT INVALID OPCODES FOR REMAINING JMPS
000020A4  4EF9 00002104           1229  jmp_table      JMP         code0000
000020AA                          1230                  *ADDI
000020AA                          1231  
000020AA  4EF9 00002118           1232                 JMP         code0001
000020B0                          1233  
000020B0  4EF9 0000211C           1234                 JMP         code0010
000020B6                          1235  
000020B6  4EF9 00002120           1236                 JMP         code0011
000020BC                          1237  
000020BC  4EF9 00002124           1238                 JMP         code0100
000020C2                          1239                             
000020C2  4EF9 00002158           1240                 JMP         code0101
000020C8                          1241                 * ADDQ
000020C8                          1242                  
000020C8                          1243        
000020C8  4EF9 0000215C           1244                 JMP         code0110
000020CE                          1245                 * BCC
000020CE                          1246                 * BGT
000020CE                          1247                 * BLE
000020CE                          1248                 
000020CE  4EF9 00002160           1249                 JMP         code0111
000020D4                          1250                 * MOVEQ
000020D4                          1251  
000020D4  4EF9 00002164           1252                 JMP         code1000
000020DA                          1253                 * DIVU
000020DA                          1254                 * OR
000020DA                          1255  
000020DA  4EF9 00002176           1256                 JMP         code1001
000020E0                          1257                  *SUB
000020E0  4EF9 0000217A           1258                 JMP         code1010
000020E6                          1259                 
000020E6  4EF9 0000217E           1260                 JMP         code1011
000020EC                          1261                 * CMP
000020EC                          1262                 
000020EC  4EF9 00002182           1263                 JMP         code1100
000020F2                          1264                 * MULS
000020F2                          1265                 * AND
000020F2                          1266          
000020F2  4EF9 00002194           1267                 JMP         code1101
000020F8                          1268                 *ADD
000020F8                          1269                 *ADDA
000020F8  4EF9 000021E0           1270                 JMP         code1110
000020FE                          1271                 * ASR
000020FE                          1272                 * ASL
000020FE                          1273                 * LSL
000020FE                          1274                 * LSR
000020FE                          1275                 * ROL
000020FE                          1276                 * ROR
000020FE                          1277  
000020FE  4EF9 00002206           1278                 JMP         code1111
00002104                          1279  
00002104                          1280  
00002104                          1281  code0000      
00002104  4EB9 0000292A           1282                 JSR          bits5to8 // RETURNS INTO D3
0000210A  B6BC 00000006           1283                 CMP.L        #%0110, D3
00002110  6600 0924               1284                 BNE          INVALID_OP
00002114  6000 01B0               1285                 BRA          ADDI  
00002118                          1286  
00002118                          1287  code0001      
00002118  6000 091C               1288                 BRA     INVALID_OP
0000211C                          1289  
0000211C  6000 0918               1290  code0010        BRA       INVALID_OP
00002120                          1291  
00002120  6000 0914               1292  code0011        BRA       INVALID_OP
00002124                          1293  
00002124                          1294  code0100       
00002124  4EB9 00002ACA           1295                 JSR COPY_OPCODE // Makes a copy of Opcode into d2
0000212A                          1296                  
0000212A                          1297                 *NOP
0000212A  C47C 0FFF               1298                 AND     #%0000111111111111,D2
0000212E  B4BC 00000E71           1299                 CMP.L   #%000111001110001, D2
00002134  6700 091A               1300                 BEQ     NOP
00002138                          1301                 
00002138                          1302                 *RTS
00002138  C47C 0FFF               1303                 AND     #%0000111111111111,D2
0000213C  B4BC 00000E75           1304                 CMP.L   #%0000111001110101, D2
00002142  6700 091A               1305                 BEQ     RTS
00002146                          1306  
00002146                          1307                 *JSR
00002146  C47C 0FC0               1308                 AND     #%0000111111000000,D2
0000214A  B4BC 00000E80           1309                 CMP.L   #%0000111010000000,D2
00002150  6700 091A               1310                 BEQ     JSR
00002154                          1311                 
00002154                          1312                 * MOVEM
00002154                          1313                  ** 0 1  0 0     1 | D | 0   0 1 | S M   Xn  
00002154                          1314                ** AND     #%0000111110000000,D2
00002154                          1315                 * DATA REGISTER
00002154                          1316                ** CMP.L   #%0000100010000000, D2
00002154                          1317                 ** JSR      MOVEM
00002154                          1318                 * ADDRESS REGISTER (DECREMENTED)
00002154                          1319                 ** CMP.L  #%0000110010000000, D2
00002154                          1320                 ** JSR    MOVEM
00002154                          1321                  
00002154                          1322                  ** TO DO: BRANCH IF INVALID OPCODE
00002154                          1323                  *LEA - if it's not the top codes, it's LEA
00002154  6000 0214               1324                  BRA     LEA
00002158                          1325  code0101      
00002158                          1326  
00002158  6000 02FA               1327                  BRA   ADDQ
0000215C                          1328  
0000215C  6000 08D8               1329  code0110         BRA       INVALID_OP
00002160                          1330  
00002160                          1331  code0111       
00002160  6000 0368               1332                  BRA       MOVEQ
00002164                          1333  
00002164                          1334  code1000      
00002164  4EB9 0000293C           1335                  JSR        bits8to10
0000216A  B67C 0003               1336                  CMP        #%011, D3  ** ONLY TIME IT'S DIVU
0000216E  6700 0386               1337                  BEQ        DIVU
00002172  6000 0416               1338                  BRA        OR       ** OTHERWISE OR
00002176                          1339                  
00002176                          1340  
00002176                          1341  code1001       
00002176  6000 04BE               1342                 BRA         SUB
0000217A  6000 08BA               1343  code1010       BRA       INVALID_OP
0000217E                          1344  
0000217E                          1345  code1011       
0000217E  6000 055A               1346                 BRA         CMP
00002182                          1347  
00002182                          1348  code1100      
00002182  4EB9 0000293C           1349                  JSR        bits8to10
00002188  B67C 0007               1350                  CMP        #%111, D3  ** ONLY TIME IT'S MULS
0000218C  6700 05EE               1351                  BEQ        MULS
00002190  6000 0610               1352                  BRA        AND       ** OTHERWISE AND
00002194                          1353  
00002194                          1354  code1101       
00002194  4EB9 00002ACA           1355                 JSR COPY_OPCODE // Makes a copy of Opcode into d2
0000219A                          1356                 *ADDA
0000219A  4EB9 0000293C           1357                 JSR      bits8to10
000021A0  B67C 0003               1358                 CMP      #%011, D3  ** WORD
000021A4  6700 0066               1359                 BEQ      ADDA
000021A8  B67C 0007               1360                 CMP      #%111, D3   ** LONG
000021AC  6700 005E               1361                 BEQ      ADDA
000021B0                          1362                 
000021B0                          1363                 *ADD
000021B0  B67C 0000               1364                 CMP      #%000, D3   ** BYTE TO DATA REGISTER
000021B4  6700 007C               1365                 BEQ      ADD
000021B8  B67C 0001               1366                 CMP      #%001, D3   ** WORD TO DATA REGISTER
000021BC  6700 0074               1367                 BEQ      ADD
000021C0  B67C 0002               1368                 CMP      #%010, D3   ** LONG TO DATA REGISTER
000021C4  6700 006C               1369                 BEQ      ADD
000021C8  B67C 0004               1370                 CMP      #%100, D3   ** BYTE TO EA
000021CC  6700 0064               1371                 BEQ      ADD
000021D0  B67C 0005               1372                 CMP      #%101, D3   ** WORD TO EA
000021D4  6700 005C               1373                 BEQ      ADD
000021D8  B67C 0006               1374                 CMP      #%110, D3   ** LONG TO EA
000021DC  6700 0054               1375                 BEQ      ADD
000021E0                          1376                 
000021E0                          1377  
000021E0                          1378  code1110       
000021E0                          1379                  * ASR
000021E0  4EB9 00002980           1380                  JSR     bits1to10
000021E6  B67C 0383               1381                  CMP     #%1110000011,D3
000021EA  6700 05D6               1382                  BEQ     ASR
000021EE                          1383                  
000021EE                          1384                  * ASL
000021EE  B67C 0387               1385                  CMP     #%1110000111,D3
000021F2  6700 05EA               1386                  BEQ     ASL
000021F6                          1387                  
000021F6                          1388                  * LSL -- has register/immediate shift and 
000021F6                          1389                  
000021F6                          1390                  ** bit 8 is the direction
000021F6  B67C 01C7               1391                  CMP     #%111000111,D3
000021FA  6700 05FE               1392                  BEQ     LSL
000021FE                          1393                  
000021FE                          1394                  * LSR
000021FE  B67C 038B               1395                  CMP     #%1110001011,D3
00002202  6700 0612               1396                  BEQ     LSR
00002206                          1397                  
00002206                          1398                  * ROL
00002206                          1399                  
00002206                          1400                  * ROR
00002206                          1401  
00002206  4EB9 00002A36           1402  code1111       JSR       INVALID_OP
0000220C                          1403  
0000220C                          1404  ADDA    
0000220C  4EB9 00002216           1405                 JSR     ADDA_BUFFER
00002212  6000 08DC               1406                 BRA     PRINT_BUFFER
00002216                          1407                  
00002216                          1408  ADDA_BUFFER
00002216  1CFC 0041               1409                 MOVE.B   #'A',(A6)+
0000221A  1CFC 0044               1410                 MOVE.B   #'D', (A6)+  
0000221E  1CFC 0044               1411                 MOVE.B   #'D', (A6)+
00002222  1CFC 0041               1412                 MOVE.B   #'A', (A6)+
00002226  4EB9 00002DC6           1413                 JSR      GETSIZE_ADDA
0000222C  1CFC 0020               1414                 MOVE.B   #' ', (A6)+
00002230  4E75                    1415                 RTS
00002232                          1416                 
00002232                          1417                 
00002232                          1418                 
00002232                          1419  *********************************************               
00002232                          1420  ADD    
00002232  4EB9 0000223A           1421                 JSR     ADD_BUFFER
00002238  4E75                    1422                 RTS
0000223A                          1423                  
0000223A                          1424  ADD_BUFFER
0000223A  1CFC 0041               1425                 MOVE.B   #'A',(A6)+
0000223E  1CFC 0044               1426                 MOVE.B   #'D', (A6)+  
00002242  1CFC 0044               1427                 MOVE.B   #'D', (A6)+
00002246  4EB9 00002D04           1428                 JSR      GETSIZE_ADD
0000224C                          1429                 
0000224C                          1430                 ;Okay, the directionality bit in D6 should determine which order we should process bits in?
0000224C                          1431                 
0000224C  BC7C 0001               1432                 CMP      #1,D6
00002250  6600 0018               1433                 BNE      ADD_DIRECTION_REVERSED
00002254  4EB9 00002280           1434                 JSR      ADD_SRC
0000225A  1CFC 002C               1435                 MOVE.B   #',', (A6)+
0000225E  1CFC 0020               1436                 MOVE.B   #' ', (A6)+
00002262  4EB9 000022A4           1437                 JSR      ADD_DEST
00002268  4E75                    1438                 RTS
0000226A                          1439                 
0000226A                          1440                 
0000226A                          1441  ADD_DIRECTION_REVERSED
0000226A                          1442  
0000226A  4246                    1443                 CLR      D6
0000226C  4EB9 000022A4           1444                 JSR      ADD_DEST
00002272  1CFC 002C               1445                 MOVE.B   #',', (A6)+
00002276  1CFC 0020               1446                 MOVE.B   #' ', (A6)+
0000227A  4EB9 00002280           1447                 JSR      ADD_SRC             
00002280                          1448                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002280                          1449                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002280                          1450                 
00002280                          1451  ***********************************************        
00002280                          1452  
00002280                          1453  
00002280                          1454  
00002280                          1455  ****************************************************************************************
00002280                          1456  ADD_SRC
00002280                          1457  
00002280  4EB9 0000294E           1458                  JSR    bits11to13
00002286  3803                    1459                  MOVE   D3,D4
00002288  41F9 00002832           1460                  LEA     jmp_mode,A0    *Index into the table
0000228E  C6FC 0006               1461                  MULU   #6,D3
00002292  4EB0 3000               1462                  JSR    0(A0,D3)     
00002296  4EB9 00002960           1463                  JSR    bits14to16
0000229C  4EB9 00002862           1464                  JSR    insert_num
000022A2  4E75                    1465                  RTS
000022A4                          1466  
000022A4                          1467  
000022A4                          1468  
000022A4                          1469  
000022A4                          1470  
000022A4                          1471  ADD_DEST
000022A4  363C 0000               1472                  MOVE.W #%000,D3     ;Can only have a data register.
000022A8  3803                    1473                  MOVE   D3,D4
000022AA  41F9 00002832           1474                  LEA     jmp_mode,A0    *Index into the table
000022B0  C6FC 0006               1475                  MULU    #6,D3       *Form offset     
000022B4  4EB0 3000               1476                  JSR     0(A0,D3)   *Jump indirect with index
000022B8                          1477                  
000022B8  4EB9 00002916           1478                  JSR     bits5to7
000022BE  4EB9 00002862           1479                  JSR     insert_num
000022C4  4E75                    1480                  RTS
000022C6                          1481                          
000022C6                          1482  
000022C6                          1483  
000022C6                          1484  
000022C6                          1485  ADDI
000022C6  4EB9 0000234E           1486                  JSR     ADDI_BUFFER
000022CC  4EB9 000022DC           1487                  JSR     ADDI_SRC
000022D2  4EB9 000022EA           1488                  JSR     ADDI_DES
000022D8  6000 0816               1489                  BRA     PRINT_BUFFER
000022DC                          1490                  
000022DC                          1491  ADDI_SRC                        
000022DC  1CFC 0023               1492                  MOVE.B  #'#', (A6)+
000022E0  1CFC 002C               1493                  MOVE.B  #',', (A6)+
000022E4  1CFC 0020               1494                  MOVE.B  #' ', (A6)+
000022E8  4E75                    1495                  RTS
000022EA                          1496                    ** TODO: IMPLEMENT THIS IN EA
000022EA                          1497                  ** Immediate field—Data immediately following the instruction.
000022EA                          1498                  **If size = 00, the data is the low-order byte of the immediate word.
000022EA                          1499                  **If size = 01, the data is the entire immediate word.
000022EA                          1500                  **If size = 10, the data is the next two immediate words. 
000022EA                          1501  ADDI_DES
000022EA                          1502                  * LATER BITS ARE DESTINATION (11 TO 13 FOR MODE, 14 TO 16 FOR REGISTER)
000022EA                          1503                  ** INVALID INCLUDE AN, IMMEDIATE AND TYPICAL INVALIDS
000022EA  4EB9 0000294E           1504                 JSR      bits11to13
000022F0  B67C 0001               1505                 CMP      #%001, D3 **AN
000022F4  6700 073C               1506                 BEQ      INVALID_EA
000022F8  B67C 0005               1507                 CMP      #%101, D3 **COMPLICATED
000022FC  6700 0734               1508                 BEQ      INVALID_EA
00002300  B67C 0006               1509                 CMP      #%110, D3 **COMPLICATED
00002304  6700 072C               1510                 BEQ      INVALID_EA
00002308                          1511                 
00002308  4EB9 00002970           1512                 JSR      bits11to16 // check mode and register, invalid if immediate or 111010, 111011
0000230E  B67C 003C               1513                 CMP      #%111100,D3 // immediate data
00002312  6700 071E               1514                 BEQ      INVALID_EA
00002316  B67C 003A               1515                 CMP      #%111010,D3 // complicated
0000231A  6700 0716               1516                 BEQ      INVALID_EA
0000231E  B67C 003B               1517                 CMP      #%111011,D3 // complicated
00002322  6700 070E               1518                 BEQ      INVALID_EA
00002326                          1519                 
00002326  4EB9 0000294E           1520                 JSR      bits11to13 ** grab bits to jump with\
0000232C  3803                    1521                 MOVE     D3,D4
0000232E  41F9 00002832           1522                 LEA     jmp_mode,A0    *Index into the table
00002334  C6FC 0006               1523                 MULU    #6,D3       *Form offset     
00002338  4EB0 3000               1524                 JSR     0(A0,D3)   *Jump indirect with index
0000233C                          1525                 
0000233C  4243                    1526                 CLR     D3
0000233E  4EB9 00002960           1527                 JSR     bits14to16
00002344  4EB9 00002862           1528                 JSR     insert_num
0000234A  4244                    1529                 CLR     D4
0000234C                          1530                 
0000234C  4E75                    1531                 RTS
0000234E                          1532                 
0000234E                          1533                             
0000234E                          1534  ADDI_BUFFER
0000234E  1CFC 0041               1535                 MOVE.B   #'A',(A6)+
00002352  1CFC 0044               1536                 MOVE.B   #'D', (A6)+  
00002356  1CFC 0044               1537                 MOVE.B   #'D', (A6)+
0000235A  1CFC 0049               1538                 MOVE.B   #'I', (A6)+
0000235E                          1539                 
0000235E  4EB9 00002D8C           1540                 JSR      GETSIZE_ADDI
00002364                          1541                 
00002364                          1542                 ** TODO: ADD SIZE BASED ON BITS 9 TO 10   
00002364                          1543                 ** VALID SIZES ARE B (00),W (01) ,L (10)
00002364  1CFC 0020               1544                 MOVE.B   #' ', (A6)+
00002368  4E75                    1545                 RTS
0000236A                          1546                              
0000236A                          1547  LEA
0000236A  4EB9 0000293C           1548                 JSR      bits8to10   // 1 1 1
00002370  B47C 0007               1549                 CMP      #7, D2 // if the returned bits are not 7, it's not LEA
00002374  6600 06C0               1550                 BNE      INVALID_OP
00002378  4EB9 0000238C           1551                 JSR      LEA_BUFFER
0000237E  4EB9 0000239E           1552                 JSR      LEA_SRC
00002384  4EB9 00002430           1553                 JSR      LEA_DEST
0000238A  4E75                    1554                 RTS
0000238C                          1555                 
0000238C                          1556  LEA_BUFFER 
0000238C  1CFC 004C               1557                 MOVE.B   #'L',(A6)+
00002390  1CFC 0045               1558                 MOVE.B   #'E', (A6)+  
00002394  1CFC 0041               1559                 MOVE.B   #'A', (A6)+
00002398  1CFC 0020               1560                 MOVE.B   #' ', (A6)+
0000239C  4E75                    1561                 RTS
0000239E                          1562            
0000239E                          1563  LEA_SRC
0000239E                          1564              *INVALID SRCS ARE DN, AN, (AN)+, -(AN), 101 (COMPLICATED, 110, #DATA
0000239E  4EB9 0000294E           1565              JSR      bits11to13  // source mode - D3
000023A4  B67C 0000               1566              CMP      #%000, D3
000023A8  6700 0688               1567              BEQ      INVALID_EA
000023AC  B67C 0001               1568              CMP      #%001, D3
000023B0  6700 0680               1569              BEQ      INVALID_EA
000023B4  B67C 0003               1570              CMP      #%011, D3
000023B8  6700 0678               1571              BEQ      INVALID_EA
000023BC  B67C 0004               1572              CMP      #%100, D3
000023C0  6700 0670               1573              BEQ      INVALID_EA
000023C4  B67C 0005               1574              CMP      #%101, D3
000023C8  6700 0668               1575              BEQ      INVALID_EA
000023CC  B67C 0006               1576              CMP      #%110, D3
000023D0  6700 0660               1577              BEQ      INVALID_EA
000023D4                          1578  
000023D4                          1579              
000023D4                          1580              * CHECK ON REGISTER BITS TO SEE IF NOW ABSOLUTE WORD OR LONG
000023D4  4EB9 00002960           1581              JSR      bits14to16 // source register - d4
000023DA  B67C 0004               1582              CMP      #%100, D3
000023DE  6700 0652               1583              BEQ      INVALID_EA
000023E2  B67C 0002               1584              CMP      #%010, D3
000023E6  6700 064A               1585              BEQ      INVALID_EA
000023EA  B67C 0003               1586              CMP      #%011, D3
000023EE  6700 0642               1587              BEQ      INVALID_EA
000023F2                          1588              
000023F2                          1589  
000023F2  4EB9 00002970           1590               JSR      bits11to16 // check mode and register, invalid if immediate or 111010, 111011
000023F8  B67C 003C               1591               CMP      #%111100,D3 // immediate data
000023FC  6700 0634               1592               BEQ      INVALID_EA
00002400  B67C 003A               1593               CMP      #%111010,D3 // complicated
00002404  6700 062C               1594               BEQ      INVALID_EA
00002408  B67C 003B               1595               CMP      #%111011,D3 // complicated
0000240C  6700 0624               1596               BEQ      INVALID_EA
00002410                          1597     
00002410  4EB9 0000294E           1598               JSR      bits11to13 ** grab mode bits to jump with
00002416  3803                    1599               MOVE    D3,D4
00002418                          1600  
00002418  41F9 00002832           1601               LEA     jmp_mode,A0    *Index into the table
0000241E  C6FC 0006               1602               MULU    #6,D3       *Form offset     
00002422  4EB0 3000               1603               JSR     0(A0,D3)   *Jump indirect with index
00002426                          1604   
00002426  1CFC 002C               1605               MOVE.B     #',', (A6)+
0000242A  1CFC 0020               1606               MOVE.B     #' ', (A6)+
0000242E                          1607  
0000242E  4E75                    1608               RTS
00002430                          1609               
00002430                          1610  LEA_DEST    
00002430  4244                    1611                  CLR     D4
00002432  41F9 00002832           1612                  LEA     jmp_mode,A0    * LOAD MODE TABLE FOR JUMPING            
00002438  363C 0001               1613                  MOVE.W  #%001,D3    * LEA CAN ONLY HAVE AN AS DESTINATION
0000243C  3803                    1614                  MOVE    D3,D4
0000243E  C6FC 0006               1615                  MULU    #6,D3       *Form offset     
00002442  4EB0 3000               1616                  JSR     0(A0,D3)   *Jump indirect with index
00002446                          1617                  
00002446  4EB9 00002916           1618                  JSR     bits5to7
0000244C  4EB9 00002862           1619                  JSR     insert_num
00002452                          1620                  
00002452  4E75                    1621                  RTS
00002454                          1622  
00002454                          1623  *************************************************
00002454                          1624  
00002454                          1625  ADDQ
00002454  4EB9 000024B2           1626                  JSR     ADDQ_BUFFER
0000245A  4EB9 00002470           1627                  JSR     ADDQ_SRC
00002460  1CFC 002C               1628                  MOVE.B  #',',(A6)+
00002464  1CFC 0020               1629                  MOVE.B  #' ',(A6)+
00002468  4EB9 00002488           1630                  JSR     ADDQ_DEST
0000246E  4E75                    1631                  RTS                 ;BRA     PRINT_BUFFER
00002470                          1632  
00002470                          1633  ADDQ_SRC
00002470  4EB9 00002916           1634                  JSR     bits5to7
00002476  1CFC 0023               1635                  MOVE.B  #'#',(A6)+
0000247A  183C 0000               1636                  MOVE.B  #%000,D4
0000247E  4EB9 00002862           1637                  JSR     insert_num
00002484  4244                    1638                  CLR     D4
00002486  4E75                    1639                  RTS
00002488                          1640                  
00002488                          1641  ADDQ_DEST
00002488  4EB9 0000294E           1642                 JSR      bits11to13
0000248E  3803                    1643                 MOVE     D3,D4
00002490  41F9 00002832           1644                 LEA     jmp_mode,A0    *Index into the table
00002496  C6FC 0006               1645                 MULU    #6,D3       *Form offset     
0000249A  4EB0 3000               1646                 JSR     0(A0,D3)   *Jump indirect with index
0000249E  4243                    1647                 CLR     D3
000024A0  4EB9 00002960           1648                 JSR     bits14to16
000024A6  4EB9 00002862           1649                 JSR     insert_num
000024AC  4244                    1650                 CLR     D4
000024AE  4243                    1651                 CLR     D3
000024B0  4E75                    1652                 RTS
000024B2                          1653                 
000024B2                          1654  
000024B2                          1655  ADDQ_BUFFER
000024B2  1CFC 0041               1656                 MOVE.B   #'A',(A6)+
000024B6  1CFC 0044               1657                 MOVE.B   #'D', (A6)+  
000024BA  1CFC 0044               1658                 MOVE.B   #'D', (A6)+
000024BE  1CFC 0051               1659                 MOVE.B   #'Q', (A6)+
000024C2  4EB9 00002B32           1660                 JSR      GETSIZE_ADDQ
000024C8                          1661                 ** TODO: ADD SIZE BASED ON BITS 9 TO 10
000024C8                          1662                 ** VALID SIZES ARE B (00),W (01) ,L (10)
000024C8  4E75                    1663                 RTS               
000024CA                          1664  
000024CA                          1665  
000024CA                          1666  ****************************************               
000024CA                          1667  MOVEQ
000024CA  4EB9 000024D4           1668                  JSR     MOVEQ_BUFFER  
000024D0  6000 061E               1669                  BRA     PRINT_BUFFER
000024D4                          1670  
000024D4                          1671  MOVEQ_BUFFER
000024D4  1CFC 004D               1672                 MOVE.B   #'M',(A6)+
000024D8  1CFC 004F               1673                 MOVE.B   #'O', (A6)+  
000024DC  1CFC 0056               1674                 MOVE.B   #'V', (A6)+
000024E0  1CFC 0045               1675                 MOVE.B   #'E', (A6)+
000024E4  1CFC 0051               1676                 MOVE.B   #'Q', (A6)+
000024E8  1CFC 002E               1677                 MOVE.B   #'.', (A6)+
000024EC  1CFC 004C               1678                 MOVE.B   #'L', (A6)+
000024F0  1CFC 0020               1679                 MOVE.B   #' ', (A6)+
000024F4  4E75                    1680                 RTS
000024F6                          1681  
000024F6                          1682  
000024F6                          1683  ****************************************
000024F6                          1684  
000024F6                          1685  DIVU
000024F6  4EB9 0000293C           1686                  JSR     bits8to10
000024FC  B67C 0003               1687                  CMP     #%011,D3
00002500  6600 0530               1688                  BNE     INVALID_EA
00002504  4243                    1689                  CLR     D3
00002506  4EB9 00002522           1690                  JSR     DIVU_BUFFER
0000250C  4EB9 00002538           1691                  JSR     DIVU_SRC
00002512  1CFC 002C               1692                  MOVE.B  #',',(A6)+
00002516  1CFC 0020               1693                  MOVE.B  #' ',(A6)+
0000251A  4EB9 00002562           1694                  JSR     DIVU_DEST
00002520  4E75                    1695                  RTS                 ;BRA     PRINT_BUFFER
00002522                          1696  
00002522                          1697  DIVU_BUFFER
00002522  1CFC 0044               1698                 MOVE.B   #'D',(A6)+
00002526  1CFC 0049               1699                 MOVE.B   #'I', (A6)+  
0000252A  1CFC 0056               1700                 MOVE.B   #'V', (A6)+
0000252E  1CFC 0055               1701                 MOVE.B   #'U', (A6)+
00002532  1CFC 0020               1702                 MOVE.B   #' ', (A6)+
00002536  4E75                    1703                 RTS  
00002538                          1704                 
00002538                          1705                 
00002538                          1706  DIVU_SRC
00002538  4EB9 0000294E           1707                 JSR      bits11to13
0000253E  3803                    1708                 MOVE     D3,D4
00002540  41F9 00002832           1709                 LEA     jmp_mode,A0    *Index into the table
00002546  C6FC 0006               1710                 MULU    #6,D3       *Form offset     
0000254A  4EB0 3000               1711                 JSR     0(A0,D3)   *Jump indirect with index  
0000254E  4243                    1712                 CLR     D3
00002550  4EB9 00002960           1713                 JSR     bits14to16
00002556  4EB9 00002862           1714                 JSR     insert_num
0000255C  4244                    1715                 CLR     D4
0000255E  4243                    1716                 CLR     D3
00002560  4E75                    1717                 RTS
00002562                          1718                 
00002562                          1719  DIVU_DEST
00002562  363C 0000               1720                 MOVE    #%000,D3     ;DIVU destination can only be a data register.
00002566  3803                    1721                 MOVE    D3,D4
00002568  41F9 00002832           1722                 LEA     jmp_mode,A0    *Index into the table
0000256E  C6FC 0006               1723                 MULU    #6,D3       *Form offset     
00002572  4EB0 3000               1724                 JSR     0(A0,D3)   *Jump indirect with index  
00002576  4243                    1725                 CLR     D3
00002578  4EB9 00002916           1726                 JSR     bits5to7
0000257E  4EB9 00002862           1727                 JSR     insert_num
00002584  4244                    1728                 CLR     D4
00002586  4243                    1729                 CLR     D3
00002588  4E75                    1730                 RTS
0000258A                          1731                 
0000258A                          1732                 
0000258A                          1733                 
0000258A                          1734  *****************************************               
0000258A                          1735                 
0000258A                          1736  OR    
0000258A  4EB9 000025C8           1737                 JSR     OR_BUFFER
00002590                          1738                 
00002590                          1739                             
00002590                          1740                 ;Okay, the directionality bit in D6 should determine which order we should process bits in?
00002590  BC7C 0001               1741                 CMP      #1,D6
00002594  6600 001A               1742                 BNE      OR_DIRECTION_REVERSED
00002598  4246                    1743                 CLR      D6
0000259A  4EB9 000025DC           1744                 JSR      OR_SRC
000025A0  1CFC 002C               1745                 MOVE.B   #',', (A6)+
000025A4  1CFC 0020               1746                 MOVE.B   #' ', (A6)+
000025A8  4EB9 0000260E           1747                 JSR      OR_DEST
000025AE  4E75                    1748                 RTS
000025B0                          1749                 
000025B0                          1750                 
000025B0                          1751  OR_DIRECTION_REVERSED
000025B0  4246                    1752                 CLR      D6
000025B2  4EB9 0000260E           1753                 JSR      OR_DEST
000025B8  1CFC 002C               1754                 MOVE.B   #',', (A6)+
000025BC  1CFC 0020               1755                 MOVE.B   #' ', (A6)+
000025C0  4EB9 000025DC           1756                 JSR      OR_SRC             
000025C6                          1757                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
000025C6                          1758                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA>                
000025C6                          1759                 
000025C6                          1760                 
000025C6  4E75                    1761                 RTS                  ;BRA     PRINT_BUFFER
000025C8                          1762                  
000025C8                          1763  OR_BUFFER
000025C8  1CFC 004F               1764                 MOVE.B   #'O',(A6)+
000025CC  1CFC 0052               1765                 MOVE.B   #'R', (A6)+
000025D0  4EB9 00002C7C           1766                 JSR      GETSIZE_OR  
000025D6                          1767                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
000025D6                          1768                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
000025D6  1CFC 0020               1769                 MOVE.B   #' ', (A6)+
000025DA  4E75                    1770                 RTS   
000025DC                          1771                 
000025DC                          1772                 
000025DC                          1773                 
000025DC                          1774                 
000025DC                          1775  OR_SRC
000025DC  4EB9 0000294E           1776                 JSR      bits11to13
000025E2  B67C 0001               1777                 CMP      #%001,D3
000025E6  6700 044A               1778                 BEQ      INVALID_EA
000025EA  3803                    1779                 MOVE     D3,D4
000025EC  41F9 00002832           1780                 LEA     jmp_mode,A0    *Index into the table
000025F2  C6FC 0006               1781                 MULU    #6,D3       *Form offset     
000025F6  4EB0 3000               1782                 JSR     0(A0,D3)   *Jump indirect with index  
000025FA  4243                    1783                 CLR     D3
000025FC  4EB9 00002960           1784                 JSR     bits14to16
00002602  4EB9 00002862           1785                 JSR     insert_num
00002608  4243                    1786                 CLR     D3
0000260A  4244                    1787                 CLR     D4
0000260C  4E75                    1788                 RTS
0000260E                          1789  
0000260E                          1790  
0000260E                          1791  OR_DEST
0000260E  163C 0000               1792                 MOVE.B  #%000,D3
00002612  3803                    1793                 MOVE    D3,D4
00002614  41F9 00002832           1794                 LEA     jmp_mode,A0    *Index into the table
0000261A  C6FC 0006               1795                 MULU    #6,D3       *Form offset     
0000261E  4EB0 3000               1796                 JSR     0(A0,D3)   *Jump indirect with index  
00002622  4243                    1797                 CLR     D3
00002624  4EB9 00002916           1798                 JSR     bits5to7    
0000262A  4EB9 00002862           1799                 JSR     insert_num
00002630  4243                    1800                 CLR     D3
00002632  4244                    1801                 CLR     D4
00002634  4E75                    1802                 RTS   
00002636                          1803  
00002636                          1804  
00002636                          1805  
00002636                          1806  
00002636                          1807  
00002636                          1808  ***********************************************
00002636                          1809  
00002636                          1810  SUB   
00002636  4EB9 00002670           1811                 JSR     SUB_BUFFER
0000263C                          1812                 ;Okay, the directionality bit in D6 should determine which order we should process bits in?
0000263C  BC7C 0001               1813                 CMP      #1,D6
00002640  6600 001A               1814                 BNE      SUB_DIRECTION_REVERSED
00002644  4246                    1815                 CLR      D6
00002646  4EB9 00002688           1816                 JSR      SUB_SRC
0000264C  1CFC 002C               1817                 MOVE.B   #',', (A6)+
00002650  1CFC 0020               1818                 MOVE.B   #' ', (A6)+
00002654  4EB9 000026B2           1819                 JSR      SUB_DEST
0000265A  4E75                    1820                 RTS
0000265C                          1821                 
0000265C                          1822                 
0000265C                          1823  SUB_DIRECTION_REVERSED
0000265C  4246                    1824                 CLR      D6
0000265E  4EB8 260E               1825                 JSR      OR_DEST
00002662  1CFC 002C               1826                 MOVE.B   #',', (A6)+
00002666  1CFC 0020               1827                 MOVE.B   #' ', (A6)+
0000266A  4EB8 25DC               1828                 JSR      OR_SRC             
0000266E                          1829                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
0000266E                          1830                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA>                
0000266E                          1831                 
0000266E                          1832                 
0000266E  4E75                    1833                 RTS                  ;BRA     PRINT_BUFFER
00002670                          1834                 
00002670                          1835  SUB_BUFFER
00002670  1CFC 0053               1836                 MOVE.B   #'S',(A6)+
00002674  1CFC 0055               1837                 MOVE.B   #'U', (A6)+  
00002678  1CFC 0042               1838                 MOVE.B   #'B', (A6)+
0000267C  4EB9 00002BF4           1839                 JSR      GETSIZE_SUB
00002682                          1840                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002682                          1841                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002682  1CFC 0020               1842                 MOVE.B   #' ', (A6)+
00002686  4E75                    1843                 RTS  
00002688                          1844                 
00002688                          1845                 
00002688                          1846                 
00002688                          1847  SUB_SRC
00002688  4EB9 0000294E           1848                 JSR      bits11to13
0000268E  3803                    1849                 MOVE     D3,D4
00002690  41F9 00002832           1850                 LEA     jmp_mode,A0    *Index into the table
00002696  C6FC 0006               1851                 MULU    #6,D3       *Form offset     
0000269A  4EB0 3000               1852                 JSR     0(A0,D3)   *Jump indirect with index  
0000269E  4243                    1853                 CLR     D3
000026A0  4EB9 00002960           1854                 JSR     bits14to16
000026A6  4EB9 00002862           1855                 JSR     insert_num
000026AC  4243                    1856                 CLR     D3
000026AE  4244                    1857                 CLR     D4
000026B0  4E75                    1858                 RTS
000026B2                          1859  
000026B2                          1860  
000026B2                          1861  SUB_DEST
000026B2  163C 0000               1862                 MOVE.B  #%000,D3
000026B6  3803                    1863                 MOVE    D3,D4
000026B8  41F9 00002832           1864                 LEA     jmp_mode,A0    *Index into the table
000026BE  C6FC 0006               1865                 MULU    #6,D3       *Form offset     
000026C2  4EB0 3000               1866                 JSR     0(A0,D3)   *Jump indirect with index  
000026C6  4243                    1867                 CLR     D3
000026C8  4EB9 00002916           1868                 JSR     bits5to7    
000026CE  4EB9 00002862           1869                 JSR     insert_num
000026D4  4243                    1870                 CLR     D3
000026D6  4244                    1871                 CLR     D4
000026D8  4E75                    1872                 RTS   
000026DA                          1873                
000026DA                          1874  ************************************************               
000026DA                          1875                 
000026DA                          1876                 
000026DA                          1877  ************************************************               
000026DA                          1878                
000026DA                          1879                 
000026DA                          1880                 
000026DA                          1881  CMP   
000026DA  4EB9 00002718           1882                 JSR     CMP_BUFFER
000026E0                          1883                                ;Okay, the directionality bit in D6 should determine which order we should process bits in?
000026E0  BC7C 0001               1884                 CMP      #1,D6
000026E4  6600 001A               1885                 BNE      CMP_DIRECTION_REVERSED
000026E8  4246                    1886                 CLR      D6
000026EA  4EB9 0000272A           1887                 JSR      CMP_SRC
000026F0  1CFC 002C               1888                 MOVE.B   #',', (A6)+
000026F4  1CFC 0020               1889                 MOVE.B   #' ', (A6)+
000026F8  4EB9 00002754           1890                 JSR      CMP_DEST
000026FE  4E75                    1891                 RTS
00002700                          1892                 
00002700                          1893                 
00002700                          1894  CMP_DIRECTION_REVERSED
00002700  4246                    1895                 CLR      D6
00002702  4EB9 00002754           1896                 JSR      CMP_DEST
00002708  1CFC 002C               1897                 MOVE.B   #',', (A6)+
0000270C  1CFC 0020               1898                 MOVE.B   #' ', (A6)+
00002710  4EB9 0000272A           1899                 JSR      CMP_SRC             
00002716                          1900                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002716                          1901                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA>                               
00002716  4E75                    1902                 RTS                  ;BRA     PRINT_BUFFER
00002718                          1903                 
00002718                          1904                                
00002718                          1905  CMP_BUFFER
00002718  1CFC 0043               1906                 MOVE.B   #'C',(A6)+
0000271C  1CFC 004D               1907                 MOVE.B   #'M', (A6)+  
00002720  1CFC 0050               1908                 MOVE.B   #'P', (A6)+
00002724                          1909                 ** TODO: ADD SIZE BASED ON BITS 8 TO 10
00002724                          1910                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002724                          1911                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002724  1CFC 0020               1912                 MOVE.B   #' ', (A6)+
00002728  4E75                    1913                 RTS   
0000272A                          1914                 
0000272A                          1915                 
0000272A                          1916                 
0000272A                          1917  CMP_SRC
0000272A  4EB9 0000294E           1918                 JSR      bits11to13
00002730  3803                    1919                 MOVE     D3,D4
00002732  41F9 00002832           1920                 LEA     jmp_mode,A0    *Index into the table
00002738  C6FC 0006               1921                 MULU    #6,D3       *Form offset     
0000273C  4EB0 3000               1922                 JSR     0(A0,D3)   *Jump indirect with index  
00002740  4243                    1923                 CLR     D3
00002742  4EB9 00002960           1924                 JSR     bits14to16
00002748  4EB9 00002862           1925                 JSR     insert_num
0000274E  4243                    1926                 CLR     D3
00002750  4244                    1927                 CLR     D4
00002752  4E75                    1928                 RTS
00002754                          1929  
00002754                          1930  
00002754                          1931  CMP_DEST
00002754  163C 0000               1932                 MOVE.B  #%000,D3
00002758  3803                    1933                 MOVE    D3,D4
0000275A  41F9 00002832           1934                 LEA     jmp_mode,A0    *Index into the table
00002760  C6FC 0006               1935                 MULU    #6,D3       *Form offset     
00002764  4EB0 3000               1936                 JSR     0(A0,D3)   *Jump indirect with index  
00002768  4243                    1937                 CLR     D3
0000276A  4EB9 00002916           1938                 JSR     bits5to7    
00002770  4EB9 00002862           1939                 JSR     insert_num
00002776  4243                    1940                 CLR     D3
00002778  4244                    1941                 CLR     D4
0000277A  4E75                    1942                 RTS   
0000277C                          1943  
0000277C                          1944  ************************************************               
0000277C                          1945  
0000277C                          1946  ************************************************               
0000277C                          1947                
0000277C                          1948  MULS
0000277C  4EB9 00002786           1949                  JSR     MULS_BUFFER
00002782  6000 036C               1950                  BRA     PRINT_BUFFER
00002786                          1951  
00002786                          1952  MULS_BUFFER
00002786  1CFC 004D               1953                 MOVE.B   #'M',(A6)+
0000278A  1CFC 0055               1954                 MOVE.B   #'U', (A6)+  
0000278E  1CFC 004C               1955                 MOVE.B   #'L', (A6)+
00002792  1CFC 0053               1956                 MOVE.B   #'S', (A6)+
00002796  4EB9 00002B6C           1957                 JSR      GETSIZE_MULS
0000279C  1CFC 0020               1958                 MOVE.B   #' ', (A6)+
000027A0  4E75                    1959                 RTS
000027A2                          1960  
000027A2                          1961  
000027A2                          1962  ************************************************               
000027A2                          1963  
000027A2                          1964  AND    
000027A2  4EB9 000027AC           1965                 JSR     AND_BUFFER
000027A8  6000 0346               1966                 BRA     PRINT_BUFFER
000027AC                          1967                  
000027AC                          1968  AND_BUFFER
000027AC  1CFC 0041               1969                 MOVE.B   #'A',(A6)+
000027B0  1CFC 004E               1970                 MOVE.B   #'N', (A6)+  
000027B4  1CFC 0044               1971                 MOVE.B   #'D', (A6)+
000027B8  1CFC 002E               1972                 MOVE.B   #'.', (A6)+
000027BC                          1973                 ** TODO: ADD SIZE BASED ON BITS 8 TO 10
000027BC                          1974                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
000027BC                          1975                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
000027BC  1CFC 0020               1976                 MOVE.B   #' ', (A6)+
000027C0  4E75                    1977                 RTS    
000027C2                          1978  
000027C2                          1979  ASR     
000027C2  4EB9 000027CC           1980                  JSR     ASR_BUFFER
000027C8  6000 0326               1981                  BRA     PRINT_BUFFER
000027CC                          1982  
000027CC                          1983  ASR_BUFFER
000027CC  1CFC 0041               1984                 MOVE.B   #'A',(A6)+
000027D0  1CFC 0053               1985                 MOVE.B   #'S', (A6)+  
000027D4  1CFC 0052               1986                 MOVE.B   #'R', (A6)+
000027D8  1CFC 0020               1987                 MOVE.B   #' ', (A6)+
000027DC  4E75                    1988                 RTS      
000027DE                          1989  
000027DE                          1990  ASL     
000027DE  4EB9 000027E8           1991                  JSR     ASL_BUFFER
000027E4  6000 030A               1992                  BRA     PRINT_BUFFER
000027E8                          1993  
000027E8                          1994  ASL_BUFFER
000027E8  1CFC 0041               1995                 MOVE.B   #'A',(A6)+
000027EC  1CFC 0053               1996                 MOVE.B   #'S', (A6)+  
000027F0  1CFC 004C               1997                 MOVE.B   #'L', (A6)+
000027F4  1CFC 0020               1998                 MOVE.B   #' ', (A6)+
000027F8  4E75                    1999                 RTS     
000027FA                          2000  
000027FA                          2001  LSL     
000027FA  4EB9 00002804           2002                  JSR     LSL_BUFFER
00002800  6000 02EE               2003                  BRA     PRINT_BUFFER
00002804                          2004  
00002804                          2005  LSL_BUFFER
00002804  1CFC 004C               2006                 MOVE.B   #'L',(A6)+
00002808  1CFC 0053               2007                 MOVE.B   #'S', (A6)+  
0000280C  1CFC 004C               2008                 MOVE.B   #'L', (A6)+
00002810  1CFC 0020               2009                 MOVE.B   #' ', (A6)+
00002814  4E75                    2010                 RTS     
00002816                          2011  
00002816                          2012  LSR     
00002816  4EB9 00002820           2013                  JSR     LSR_BUFFER
0000281C  6000 02D2               2014                  BRA     PRINT_BUFFER
00002820                          2015  
00002820                          2016  LSR_BUFFER
00002820  1CFC 004C               2017                 MOVE.B   #'L',(A6)+
00002824  1CFC 0053               2018                 MOVE.B   #'S', (A6)+  
00002828  1CFC 0052               2019                 MOVE.B   #'R', (A6)+
0000282C  1CFC 0020               2020                 MOVE.B   #' ', (A6)+
00002830  4E75                    2021                 RTS       
00002832                          2022                 
00002832                          2023  jmp_mode
00002832  4EF9 00002992           2024                  JMP     MODE000  ** DN
00002838  4EF9 00002998           2025                  JMP     MODE001  ** AN
0000283E  4EF9 000029A0           2026                  JMP     MODE010  ** (AN)
00002844  4EF9 000029AA           2027                  JMP     MODE011  ** (AN)+   
0000284A  4EF9 000029B4           2028                  JMP     MODE100  ** -(AN)
00002850  4EF9 000029C2           2029                  JMP     MODE101  **INVALID
00002856  4EF9 000029CC           2030                  JMP     MODE110  **INVALID
0000285C  4EF9 000029D6           2031                  JMP     MODE111  ** ABSOLUTE AND IMMEDIATE
00002862                          2032  
00002862                          2033                  
00002862                          2034  insert_num
00002862                          2035                  
00002862  B67C 0007               2036                  CMP     #%111,D3
00002866  6700 007E               2037                  BEQ     FINISHER
0000286A                          2038                  
0000286A                          2039                  ;get number from D3
0000286A  B67C 0000               2040                  CMP     #%000,D3       ;0
0000286E  6600 000A               2041                  BNE     ONE         
00002872  1CFC 0030               2042                  MOVE.B  #'0',(A6)+      ;Put ASCII value in buffer.
00002876  6000 006E               2043                  BRA     FINISHER
0000287A                          2044                  
0000287A  B67C 0001               2045  ONE             CMP     #%001,D3       ;1
0000287E  6600 000A               2046                  BNE     TWO 
00002882  1CFC 0031               2047                  MOVE.B  #'1',(A6)+
00002886  6000 005E               2048                  BRA     FINISHER
0000288A                          2049  
0000288A                          2050                  
0000288A  B67C 0002               2051  TWO             CMP     #%010,D3        ;2
0000288E  6600 000A               2052                  BNE     THREE
00002892  1CFC 0032               2053                  MOVE.B  #'2',(A6)+
00002896  6000 004E               2054                  BRA     FINISHER
0000289A                          2055                  
0000289A  B67C 0003               2056  THREE           CMP     #%011,D3        ;3
0000289E  6600 000A               2057                  BNE     FOUR
000028A2  1CFC 0033               2058                  MOVE.B  #'3',(A6)+
000028A6  6000 003E               2059                  BRA     FINISHER
000028AA                          2060                  
000028AA  B67C 0004               2061  FOUR            CMP     #%100,D3        ;4
000028AE  6600 000A               2062                  BNE     FIVE
000028B2  1CFC 0034               2063                  MOVE.B  #'4',(A6)+
000028B6  6000 002E               2064                  BRA     FINISHER
000028BA                          2065                  
000028BA  B67C 0005               2066  FIVE            CMP     #%101,D3        ;5
000028BE  6600 000A               2067                  BNE     SIX
000028C2  1CFC 0035               2068                  MOVE.B  #'5',(A6)+
000028C6  6000 001E               2069                  BRA     FINISHER
000028CA                          2070                  
000028CA  B67C 0006               2071  SIX             CMP     #%110,D3        ;6
000028CE  6600 000A               2072                  BNE     SEVEN
000028D2  1CFC 0036               2073                  MOVE.B  #'6',(A6)+
000028D6  6000 000E               2074                  BRA     FINISHER
000028DA                          2075                  
000028DA  B67C 0007               2076  SEVEN           CMP     #%111,D3        ;7
000028DE  1CFC 0037               2077                  MOVE.B  #'7',(A6)+
000028E2  6000 0002               2078                  BRA     FINISHER
000028E6                          2079                  
000028E6                          2080  FINISHER                
000028E6                          2081                  
000028E6                          2082                  ;check D4, do we need to do stuff?
000028E6  B87C 0002               2083                  CMP     #%010,D4
000028EA  6600 0008               2084                  BNE     POSTINCR
000028EE  1CFC 0029               2085                  MOVE.B  #')',(A6)+
000028F2  4E75                    2086                  RTS
000028F4                          2087                  
000028F4  B87C 0003               2088  POSTINCR        CMP     #%011,D4
000028F8  6600 000C               2089                  BNE     ONEPAREN
000028FC  1CFC 0029               2090                  MOVE.B  #')',(A6)+
00002900  1CFC 002B               2091                  MOVE.B  #'+',(A6)+
00002904  4E75                    2092                  RTS
00002906                          2093                  
00002906  B87C 0004               2094  ONEPAREN        CMP     #%100,D4
0000290A  6600 0008               2095                  BNE     DONE
0000290E  1CFC 0029               2096                  MOVE.B  #')',(A6)+                
00002912                          2097  
00002912  4244                    2098                  CLR     D4
00002914  4E75                    2099  DONE            RTS
00002916                          2100  
00002916                          2101          
00002916                          2102                 
00002916                          2103  bits5to7
00002916  4243                    2104                 CLR      D3
00002918  4EB9 00002ACA           2105                 JSR      COPY_OPCODE  // opcode copied to D2
0000291E  C47C 0E00               2106                 AND      #%0000111000000000, D2
00002922  E09A                    2107                 ROR.L    #8, D2          // rotate bits so isolated at the end
00002924  E29A                    2108                 ROR.L    #1, D2
00002926  3602                    2109                 MOVE.W   D2,D3 // moving isolated bits into d3
00002928  4E75                    2110                 RTS
0000292A                          2111                 
0000292A                          2112  bits5to8
0000292A  4243                    2113                 CLR      D3
0000292C  4EB9 00002ACA           2114                 JSR      COPY_OPCODE  // opcode copied to D2
00002932  C47C 0F00               2115                 AND      #%0000111100000000, D2
00002936  E09A                    2116                 ROR.L    #8, D2          // rotate bits so isolated at the end
00002938  3602                    2117                 MOVE.W   D2,D3 // moving isolated bits into d3
0000293A  4E75                    2118                 RTS
0000293C                          2119                 
0000293C                          2120  bits8to10
0000293C  4243                    2121                 CLR      D3
0000293E  4EB9 00002ACA           2122                 JSR      COPY_OPCODE  // opcode copied to D2
00002944  C47C 01C0               2123                 AND      #%0000000111000000, D2
00002948  EC9A                    2124                 ROR.L    #6, D2          // rotate bits so isolated at the end
0000294A  3602                    2125                 MOVE.W   D2,D3 // moving isolated bits into d3
0000294C  4E75                    2126                 RTS               
0000294E                          2127             
0000294E                          2128  bits11to13
0000294E  4243                    2129                 CLR      D3
00002950  4EB9 00002ACA           2130                 JSR      COPY_OPCODE  // opcode copied to D2
00002956  C47C 0038               2131                 AND      #%0000000000111000, D2
0000295A  E69A                    2132                 ROR.L    #3, D2          // rotate bits so isolated at the end
0000295C  3602                    2133                 MOVE.W   D2,D3 // moving isolated bits into d3
0000295E  4E75                    2134                 RTS
00002960                          2135             
00002960                          2136  bits14to16
00002960  4243                    2137                 CLR      D3
00002962  4EB9 00002ACA           2138                 JSR      COPY_OPCODE  // opcode copied to D2
00002968  C47C 0007               2139                 AND      #%0000000000000111, D2
0000296C  3602                    2140                 MOVE.W   D2,D3 // moving isolated bits into d3
0000296E  4E75                    2141                 RTS
00002970                          2142  bits11to16
00002970  4243                    2143                 CLR      D3
00002972  4EB9 00002ACA           2144                 JSR      COPY_OPCODE  // opcode copied to D2
00002978  C47C 003F               2145                 AND      #%0000000000111111, D2
0000297C  3602                    2146                 MOVE.W   D2,D3 // moving isolated bits into d3
0000297E  4E75                    2147                 RTS
00002980                          2148  bits1to10
00002980  4243                    2149                 CLR      D3
00002982  4EB9 00002ACA           2150                 JSR      COPY_OPCODE  // opcode copied to D2
00002988  C47C FFC0               2151                 AND      #%1111111111000000, D2
0000298C  EC9A                    2152                 ROR.L    #6, D2
0000298E  3602                    2153                 MOVE.W   D2,D3 // moving isolated bits into d3
00002990  4E75                    2154                 RTS
00002992                          2155  ** DN       
00002992                          2156  MODE000         
00002992  1CFC 0044               2157                  MOVE.B  #'D',(A6)+     
00002996  4E75                    2158                  RTS
00002998                          2159  
00002998                          2160  ** AN
00002998                          2161  MODE001         
00002998  4EB9 000029EA           2162                  JSR ADDRESS_BUFFER  
0000299E  4E75                    2163                  RTS      
000029A0                          2164  
000029A0                          2165   ** (AN)
000029A0                          2166  MODE010         
000029A0  1CFC 0028               2167                  MOVE.B  #'(', (A6)+
000029A4  1CFC 0041               2168                  MOVE.B  #'A',(A6)+  
000029A8  4E75                    2169                  RTS      
000029AA                          2170  
000029AA                          2171  ** (AN)+ 
000029AA                          2172  MODE011         
000029AA  1CFC 0028               2173                  MOVE.B  #'(', (A6)+
000029AE  1CFC 0041               2174                  MOVE.B  #'A',(A6)+ 
000029B2  4E75                    2175                  RTS       
000029B4                          2176  
000029B4                          2177   ** -(AN)
000029B4                          2178  MODE100         
000029B4  1CFC 002D               2179                  MOVE.B  #'-', (A6)+
000029B8  1CFC 0028               2180                  MOVE.B  #'(', (A6)+
000029BC  1CFC 0041               2181                  MOVE.B  #'A',(A6)+
000029C0  4E75                    2182                  RTS
000029C2                          2183                  
000029C2                          2184  **INVALID               
000029C2                          2185  MODE101         
000029C2  1CFC 0028               2186                  MOVE.B  #'(', (A6)+
000029C6  1CFC 0041               2187                  MOVE.B  #'A',(A6)+ 
000029CA  4E75                    2188                  RTS
000029CC                          2189                  
000029CC                          2190  **INVALID
000029CC                          2191  MODE110         
000029CC  1CFC 0028               2192                  MOVE.B  #'(', (A6)+
000029D0  1CFC 0041               2193                  MOVE.B  #'A',(A6)+
000029D4  4E75                    2194                  RTS  
000029D6                          2195  
000029D6                          2196  ** ABSOLUTE AND IMMEDIATE            
000029D6                          2197  MODE111         
000029D6                          2198                  *TO DO CHECK IF ABSOLUTE OR IMMEDIATE
000029D6                          2199                * JSR      PRINT_ABSOLUTE_WORD
000029D6                          2200                 *JSR      PRINT_ABSOLUTE_LONG
000029D6                          2201                 *JSR      PRINT_IMMEDIATE_WORD
000029D6                          2202                 *JSR      PRINT_IMMEDIATE_LONG
000029D6                          2203                 
000029D6                          2204                 *** PRINT ABSOLUTE LONG
000029D6  1CFC 0024               2205                 MOVE.B   #'$', (A6)+  
000029DA  4EB9 00002B0C           2206                 JSR      PRINT_DEREF_ADDRESS
000029E0  544A                    2207                 ADD.W    #2, A2
000029E2  4EB9 00002B0C           2208                 JSR      PRINT_DEREF_ADDRESS
000029E8  4E75                    2209                 RTS            
000029EA                          2210                                          
000029EA                          2211  ADDRESS_BUFFER
000029EA  1CFC 0041               2212                  MOVE.B  #'A',(A6)+ 
000029EE  4E75                    2213                  RTS
000029F0                          2214                 
000029F0                          2215  ABSOLUTE_BUFFER
000029F0  4243                    2216                 CLR      D3
000029F2  3604                    2217                 MOVE.W   D4,D3 // USE D3 FOR COMPARISON
000029F4  1CF8 0024               2218                 MOVE.B   '$', (A6)+
000029F8  B67C 0000               2219                 CMP.W    #%000, D3
000029FC  6700 0010               2220                 BEQ      ABSOLUTE_WORD_BUFFER
00002A00  4243                    2221                 CLR      D3
00002A02  3604                    2222                 MOVE.W   D4,D3 // USE D3 FOR COMPARISON   
00002A04  B67C 0001               2223                 CMP.W    #%001, D3
00002A08  6700 0016               2224                 BEQ      ABSOLUTE_LONG_BUFFER
00002A0C  4E75                    2225                 RTS
00002A0E                          2226                 
00002A0E                          2227  ABSOLUTE_WORD_BUFFER
00002A0E                          2228                         *** TODO: SHOULD START AT THE CURRENT LOCATION AFTER OPCODE AND READ IN ADDRESS TO PRINT
00002A0E                          2229                         *** TODO: PROPERLY INCREMENT CURRENT ADDRESS
00002A0E  1CFC 0046               2230                         MOVE.B #'F', (A6)+ 
00002A12  1CFC 0046               2231                         MOVE.B #'F', (A6)+ 
00002A16  1CFC 0046               2232                         MOVE.B #'F', (A6)+ 
00002A1A  1CFC 0046               2233                         MOVE.B #'F', (A6)+ 
00002A1E  4E75                    2234                         RTS       
00002A20                          2235                    
00002A20                          2236  ABSOLUTE_LONG_BUFFER       
00002A20                          2237                         *** TODO: SHOULD START AT THE CURRENT LOCATION AFTER OPCODE AND READ IN ADDRESS TO PRINT
00002A20                          2238                         *** TODO: PROPERLY INCREMENT CURRENT ADDRESS
00002A20  1CFC 0047               2239                         MOVE.B #'G', (A6)+ 
00002A24  1CFC 0047               2240                         MOVE.B #'G', (A6)+ 
00002A28  1CFC 0047               2241                         MOVE.B #'G', (A6)+ 
00002A2C  1CFC 0047               2242                         MOVE.B #'G', (A6)+
00002A30  4E75                    2243                         RTS 
00002A32                          2244  
00002A32                          2245  INVALID_EA  
00002A32                          2246                  * TODO: IMPLEMENT
00002A32                          2247                  *** CLEAR OUT A6
00002A32                          2248                  ** PUT INVALID MESSAGE INTO A6
00002A32  6000 F66C               2249                  BRA EXIT
00002A36                          2250  INVALID_OP  
00002A36                          2251                  ** TODO: IMPLEMENT
00002A36                          2252                 *** CLEAR OUT A6
00002A36                          2253                  ** PUT INVALID MESSAGE INTO A6
00002A36  1CFC 0044               2254                      MOVE.B #'D', (A6)+
00002A3A  1CFC 0041               2255                      MOVE.B #'A', (A6)+
00002A3E  1CFC 0054               2256                      MOVE.B #'T', (A6)+
00002A42  1CFC 0041               2257                      MOVE.B #'A', (A6)+ 
00002A46  1CFC 0020               2258                      MOVE.B #' ', (A6)+ 
00002A4A  4EB9 00002B0C           2259                      JSR     PRINT_DEREF_ADDRESS
00002A50                          2260            
00002A50                          2261                  
00002A50  43F8 11AB               2262  NOP                 LEA     NOP_disp,A1          
00002A54  103C 000E               2263                      MOVE.B  #14,D0
00002A58  4E4F                    2264                      TRAP    #15
00002A5A  6000 F644               2265                      BRA     EXIT
00002A5E                          2266                   
00002A5E                          2267  RTS      
00002A5E  43F8 1212               2268                      LEA     RTS_disp,A1          
00002A62  103C 000E               2269                      MOVE.B  #14,D0
00002A66  4E4F                    2270                      TRAP    #15 
00002A68  6000 F636               2271                      BRA     EXIT
00002A6C                          2272  JSR      
00002A6C  4DF9 00002E1E           2273                      LEA     BUFFER, A6
00002A72  1CFC 004A               2274                      MOVE.B #'J', (A6)+
00002A76  1CFC 0053               2275                      MOVE.B #'S', (A6)+
00002A7A  1CFC 0052               2276                      MOVE.B #'R', (A6)+
00002A7E  1CFC 0020               2277                      MOVE.B #' ', (A6)+
00002A82  43F9 00002E1E           2278                      LEA     BUFFER, A1
00002A88                          2279                      ** BITS 10 - 12 MODE       
00002A88                          2280                      ** BITS 13 - 16 REGISTER
00002A88  103C 000E               2281                      MOVE.B  #14,D0
00002A8C  4E4F                    2282                      TRAP    #15 
00002A8E  6000 F610               2283                      BRA     EXIT
00002A92                          2284                    
00002A92                          2285  MOVEM      
00002A92                          2286                     
00002A92                          2287                      ** SIZE SUBROUTINE
00002A92                          2288                      ** 0 1  0 0     1 | D | 0   0 1 | S M   Xn  
00002A92  C47C 0040               2289                      AND #%0000000001000000,D2 
00002A96                          2290                      * WORD
00002A96  B4BC 00000040           2291                      CMP.L   #%0000000001000000,D2
00002A9C  4EB9 00002AB2           2292                      JSR     MOVEM_W 
00002AA2                          2293                      *LONG
00002AA2  B4BC 00000040           2294                      CMP.L   #%0000000001000000,D2 
00002AA8                          2295                     ** JSR     MOVEM_L
00002AA8  103C 000E               2296                      MOVE.B  #14,D0
00002AAC  4E4F                    2297                      TRAP    #15
00002AAE  6000 F5F0               2298                      BRA     EXIT 
00002AB2                          2299                      
00002AB2                          2300  MOVEM_W 
00002AB2  43F8 11C0               2301                       LEA     MOVEM_disp,A1
00002AB6                          2302                      * PRINT MOVEM
00002AB6  103C 000E               2303                       MOVE.B  #14,D0
00002ABA  4E4F                    2304                       TRAP    #15
00002ABC                          2305          
00002ABC                          2306                      * PRINT WORD PORTION
00002ABC  41F8 1257               2307                       LEA     size_w, A0
00002AC0  103C 000E               2308                       MOVE.B  #14,D0
00002AC4  4E4F                    2309                       TRAP    #15 
00002AC6                          2310          
00002AC6  6000 F5D8               2311                       BRA     EXIT 
00002ACA                          2312       
00002ACA                          2313     
00002ACA                          2314  COPY_OPCODE 
00002ACA                          2315                       ** HOLDS COPY OF OPCODE TO BE MANIPULATED
00002ACA  4242                    2316                       CLR    D2  
00002ACC  3405                    2317                       MOVE.W D5,D2 
00002ACE  4E75                    2318                       RTS  
00002AD0                          2319  
00002AD0                          2320  PRINT_ADDRESS     
00002AD0  4242                    2321                   CLR         D2
00002AD2  143C 0010               2322                   MOVE.B      #16,D2          // Setup for Base-16 conversion
00002AD6  220A                    2323                   MOVE.L      A2,D1        
00002AD8  103C 000F               2324                   MOVE.B      #15,D0          
00002ADC  4E4F                    2325                   TRAP        #15            
00002ADE  1CFC 0020               2326                   MOVE.B      #' ', (A6)+
00002AE2  1CFC 0020               2327                   MOVE.B      #' ', (A6)+
00002AE6  1CFC 0020               2328                   MOVE.B      #' ', (A6)+
00002AEA  1CFC 0020               2329                   MOVE.B      #' ', (A6)+
00002AEE  4E75                    2330                   RTS     
00002AF0                          2331  PRINT_BUFFER    
00002AF0  1CFC 0000               2332                 MOVE.B   #%0,  (A6)+ ** null terminate the string       
00002AF4  43F9 00002E1E           2333                 LEA      BUFFER, A1
00002AFA  303C 000E               2334                 MOVE.W   #14,D0
00002AFE  4E4F                    2335                 TRAP     #15
00002B00  43F8 119B               2336                 LEA     linebreak,A1            *appends line at the end of the user input
00002B04  103C 000E               2337                 MOVE.B  #14,D0
00002B08  4E4F                    2338                 TRAP    #15
00002B0A  4E75                    2339                 RTS  
00002B0C                          2340  
00002B0C                          2341  PRINT_DEREF_ADDRESS
00002B0C  1CFC 0000               2342                 MOVE.B   #%0,  (A6)+ ** null terminate the string       
00002B10  43F9 00002E1E           2343                 LEA      BUFFER, A1
00002B16  303C 000E               2344                 MOVE.W   #14,D0
00002B1A  4E4F                    2345                 TRAP     #15
00002B1C  4DF9 00002E1E           2346                 LEA      BUFFER, A6
00002B22  4242                    2347                 CLR         D2
00002B24  143C 0010               2348                 MOVE.B      #16,D2          // Setup for Base-16 conversion
00002B28  3212                    2349                 MOVE.W      (A2),D1        // PRINT INVALID HEX OPCODE        
00002B2A  103C 000F               2350                 MOVE.B      #15,D0          
00002B2E  4E4F                    2351                 TRAP        #15 
00002B30  4E75                    2352                 RTS
00002B32                          2353  
00002B32                          2354  
00002B32                          2355   ***************************
00002B32                          2356  
00002B32                          2357  GETSIZE_ADDQ
00002B32                          2358                   
00002B32                          2359                 ** VALID SIZES ARE B (00),W (01) ,L (10)
00002B32                          2360                 
00002B32  4EB8 293C               2361             JSR      bits8to10
00002B36  B67C 0000               2362             CMP      #%000,D3
00002B3A  6600 000C               2363             BNE      ADDQ_NOTBYTE
00002B3E  4EB9 00002DEE           2364             JSR      SIZEISBYTE
00002B44  4243                    2365             CLR      D3
00002B46  4E75                    2366             RTS
00002B48                          2367             
00002B48                          2368  ADDQ_NOTBYTE
00002B48  B67C 0001               2369             CMP      #%001,D3
00002B4C  6600 000C               2370             BNE      ADDQ_NOTWORD
00002B50  4EB9 00002DFE           2371             JSR      SIZEISWORD
00002B56  4243                    2372             CLR      D3
00002B58  4E75                    2373             RTS
00002B5A                          2374             
00002B5A                          2375  ADDQ_NOTWORD
00002B5A  B67C 0002               2376             CMP      #%010,D3
00002B5E  6600 FED2               2377             BNE      INVALID_EA
00002B62  4EB9 00002E0E           2378             JSR      SIZEISLONG
00002B68  4243                    2379             CLR      D3
00002B6A  4E75                    2380             RTS
00002B6C                          2381                   
00002B6C                          2382                                   
00002B6C                          2383  ****************************
00002B6C                          2384  GETSIZE_MULS
00002B6C                          2385              
00002B6C                          2386  
00002B6C                          2387  
00002B6C                          2388  
00002B6C                          2389  
00002B6C                          2390  ****************************
00002B6C                          2391  
00002B6C                          2392  
00002B6C                          2393  GETSIZE_CMP
00002B6C                          2394                 ** TODO: ADD SIZE BASED ON BITS 8 TO 10
00002B6C                          2395                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002B6C                          2396                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002B6C                          2397  
00002B6C  4EB8 293C               2398              JSR     bits8to10
00002B70  B67C 0000               2399              CMP     #000,D3
00002B74  6600 0010               2400              BNE     CMP_NOTBYTE
00002B78  4EB9 00002DEE           2401              JSR     SIZEISBYTE
00002B7E  3C3C 0001               2402              MOVE    #1,D6
00002B82  4243                    2403              CLR     D3
00002B84  4E75                    2404              RTS
00002B86                          2405              
00002B86                          2406  CMP_NOTBYTE 
00002B86  B67C 0001               2407              CMP     #%001,D3
00002B8A  6600 0010               2408              BNE     CMP_NOTWORD
00002B8E  4EB9 00002DFE           2409              JSR     SIZEISWORD
00002B94  3C3C 0001               2410              MOVE    #1,D6
00002B98  4243                    2411              CLR     D3
00002B9A  4E75                    2412              RTS
00002B9C                          2413              
00002B9C                          2414  CMP_NOTWORD
00002B9C  B67C 0002               2415              CMP     #%010,D3
00002BA0  6600 0010               2416              BNE     CMP_NOTLEFT
00002BA4  4EB9 00002E0E           2417              JSR     SIZEISLONG
00002BAA  3C3C 0001               2418              MOVE    #1,D6
00002BAE  4243                    2419              CLR     D3
00002BB0  4E75                    2420              RTS
00002BB2                          2421              
00002BB2                          2422  CMP_NOTLEFT     ;check other direction
00002BB2  B67C 0004               2423              CMP     #%100,D3
00002BB6  6600 0010               2424              BNE     CMP_NOTRIGHTBYTE
00002BBA  4EB9 00002DEE           2425              JSR     SIZEISBYTE
00002BC0  3C3C 0002               2426              MOVE    #2,D6
00002BC4  4243                    2427              CLR     D3
00002BC6  4E75                    2428              RTS
00002BC8                          2429              
00002BC8                          2430  CMP_NOTRIGHTBYTE
00002BC8  B67C 0005               2431              CMP     #%101,D3
00002BCC  6600 0010               2432              BNE     CMP_NOTRIGHTWORD
00002BD0  4EB9 00002DFE           2433              JSR     SIZEISWORD
00002BD6  3C3C 0002               2434              MOVE    #2,D6
00002BDA  4243                    2435              CLR     D3
00002BDC  4E75                    2436              RTS
00002BDE                          2437  
00002BDE                          2438  CMP_NOTRIGHTWORD
00002BDE  B67C 0006               2439              CMP     #%110,D3
00002BE2  6600 FE4E               2440              BNE     INVALID_EA
00002BE6  4EB9 00002E0E           2441              JSR     SIZEISLONG
00002BEC  3C3C 0002               2442              MOVE    #2,D6
00002BF0  4243                    2443              CLR     D3
00002BF2  4E75                    2444              RTS 
00002BF4                          2445  
00002BF4                          2446  
00002BF4                          2447  
00002BF4                          2448  
00002BF4                          2449  ****************************
00002BF4                          2450  
00002BF4                          2451  
00002BF4                          2452  GETSIZE_SUB
00002BF4                          2453                 ** TODO: ADD SIZE BASED ON BITS 8 TO 10
00002BF4                          2454                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002BF4                          2455                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002BF4  4EB8 293C               2456              JSR     bits8to10
00002BF8  B67C 0000               2457              CMP     #000,D3
00002BFC  6600 0010               2458              BNE     SUB_NOTBYTE
00002C00  4EB9 00002DEE           2459              JSR     SIZEISBYTE
00002C06  3C3C 0001               2460              MOVE    #1,D6
00002C0A  4243                    2461              CLR     D3
00002C0C  4E75                    2462              RTS
00002C0E                          2463              
00002C0E                          2464  SUB_NOTBYTE 
00002C0E  B67C 0001               2465              CMP     #%001,D3
00002C12  6600 0010               2466              BNE     SUB_NOTWORD
00002C16  4EB9 00002DFE           2467              JSR     SIZEISWORD
00002C1C  3C3C 0001               2468              MOVE    #1,D6
00002C20  4243                    2469              CLR     D3
00002C22  4E75                    2470              RTS
00002C24                          2471              
00002C24                          2472  SUB_NOTWORD
00002C24  B67C 0002               2473              CMP     #%010,D3
00002C28  6600 0010               2474              BNE     SUB_NOTLEFT
00002C2C  4EB9 00002E0E           2475              JSR     SIZEISLONG
00002C32  3C3C 0001               2476              MOVE    #1,D6
00002C36  4243                    2477              CLR     D3
00002C38  4E75                    2478              RTS
00002C3A                          2479              
00002C3A                          2480  SUB_NOTLEFT     ;check other direction
00002C3A  B67C 0004               2481              CMP     #%100,D3
00002C3E  6600 0010               2482              BNE     SUB_NOTRIGHTBYTE
00002C42  4EB9 00002DEE           2483              JSR     SIZEISBYTE
00002C48  3C3C 0002               2484              MOVE    #2,D6
00002C4C  4243                    2485              CLR     D3
00002C4E  4E75                    2486              RTS
00002C50                          2487              
00002C50                          2488  SUB_NOTRIGHTBYTE
00002C50  B67C 0005               2489              CMP     #%101,D3
00002C54  6600 0010               2490              BNE     SUB_NOTRIGHTWORD
00002C58  4EB9 00002DFE           2491              JSR     SIZEISWORD
00002C5E  3C3C 0002               2492              MOVE    #2,D6
00002C62  4243                    2493              CLR     D3
00002C64  4E75                    2494              RTS
00002C66                          2495  
00002C66                          2496  SUB_NOTRIGHTWORD
00002C66  B67C 0006               2497              CMP     #%110,D3
00002C6A  6600 FDC6               2498              BNE     INVALID_EA
00002C6E  4EB9 00002E0E           2499              JSR     SIZEISLONG
00002C74  3C3C 0002               2500              MOVE    #2,D6
00002C78  4243                    2501              CLR     D3
00002C7A  4E75                    2502              RTS 
00002C7C                          2503  
00002C7C                          2504  
00002C7C                          2505  ****************************
00002C7C                          2506  GETSIZE_OR
00002C7C                          2507                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002C7C                          2508                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002C7C                          2509          
00002C7C  4EB8 293C               2510              JSR     bits8to10
00002C80  B67C 0000               2511              CMP     #000,D3
00002C84  6600 0010               2512              BNE     OR_NOTBYTE
00002C88  4EB9 00002DEE           2513              JSR     SIZEISBYTE
00002C8E  3C3C 0001               2514              MOVE    #1,D6
00002C92  4243                    2515              CLR     D3
00002C94  4E75                    2516              RTS
00002C96                          2517              
00002C96                          2518  OR_NOTBYTE 
00002C96  B67C 0001               2519              CMP     #%001,D3
00002C9A  6600 0010               2520              BNE     OR_NOTWORD
00002C9E  4EB9 00002DFE           2521              JSR     SIZEISWORD
00002CA4  3C3C 0001               2522              MOVE    #1,D6
00002CA8  4243                    2523              CLR     D3
00002CAA  4E75                    2524              RTS
00002CAC                          2525              
00002CAC                          2526  OR_NOTWORD
00002CAC  B67C 0002               2527              CMP     #%010,D3
00002CB0  6600 0010               2528              BNE     OR_NOTLEFT
00002CB4  4EB9 00002E0E           2529              JSR     SIZEISLONG
00002CBA  3C3C 0001               2530              MOVE    #1,D6
00002CBE  4243                    2531              CLR     D3
00002CC0  4E75                    2532              RTS
00002CC2                          2533              
00002CC2                          2534  OR_NOTLEFT     ;check other direction
00002CC2  B67C 0004               2535              CMP     #%100,D3
00002CC6  6600 0010               2536              BNE     OR_NOTRIGHTBYTE
00002CCA  4EB9 00002DEE           2537              JSR     SIZEISBYTE
00002CD0  3C3C 0002               2538              MOVE    #2,D6
00002CD4  4243                    2539              CLR     D3
00002CD6  4E75                    2540              RTS
00002CD8                          2541              
00002CD8                          2542  OR_NOTRIGHTBYTE
00002CD8  B67C 0005               2543              CMP     #%101,D3
00002CDC  6600 0010               2544              BNE     OR_NOTRIGHTWORD
00002CE0  4EB9 00002DFE           2545              JSR     SIZEISWORD
00002CE6  3C3C 0002               2546              MOVE    #2,D6
00002CEA  4243                    2547              CLR     D3
00002CEC  4E75                    2548              RTS
00002CEE                          2549  
00002CEE                          2550  OR_NOTRIGHTWORD
00002CEE  B67C 0006               2551              CMP     #%110,D3
00002CF2  6600 FD3E               2552              BNE     INVALID_EA
00002CF6  4EB9 00002E0E           2553              JSR     SIZEISLONG
00002CFC  3C3C 0002               2554              MOVE    #2,D6
00002D00  4243                    2555              CLR     D3
00002D02  4E75                    2556              RTS 
00002D04                          2557  
00002D04                          2558              
00002D04                          2559  
00002D04                          2560                     
00002D04                          2561  ****************************
00002D04                          2562  
00002D04                          2563                 ** VALID SIZES ARE B (000) , W (001) ,L (010) ---> <EA> + DN --> DN 
00002D04                          2564                                 ** B (100) , W (101) ,L (110) --->  DN + <EA> --> <EA> 
00002D04                          2565  GETSIZE_ADD
00002D04  4EB8 293C               2566              JSR     bits8to10
00002D08  B67C 0000               2567              CMP     #%000,D3
00002D0C  6600 0010               2568              BNE     ADD_NOTBYTE
00002D10  4EB9 00002DEE           2569              JSR     SIZEISBYTE
00002D16  3C3C 0001               2570              MOVE    #1,D6
00002D1A  4243                    2571              CLR     D3
00002D1C  4E75                    2572              RTS
00002D1E                          2573          
00002D1E                          2574  ADD_NOTBYTE 
00002D1E  B67C 0001               2575              CMP     #%001,D3
00002D22  6600 0010               2576              BNE     ADD_NOTWORD
00002D26  4EB9 00002DFE           2577              JSR     SIZEISWORD
00002D2C  3C3C 0001               2578              MOVE    #1,D6
00002D30  4243                    2579              CLR     D3
00002D32  4E75                    2580              RTS
00002D34                          2581              
00002D34                          2582  ADD_NOTWORD
00002D34  B67C 0002               2583              CMP     #%010,D3
00002D38  6600 0010               2584              BNE     ADD_NOTLEFT
00002D3C  4EB9 00002E0E           2585              JSR     SIZEISLONG
00002D42  3C3C 0001               2586              MOVE    #1,D6
00002D46  4243                    2587              CLR     D3
00002D48  4E75                    2588              RTS
00002D4A                          2589              
00002D4A                          2590  ADD_NOTLEFT     ;check other direction
00002D4A  B67C 0004               2591              CMP     #%100,D3
00002D4E  6600 0010               2592              BNE     ADD_NOTRIGHTBYTE
00002D52  4EB9 00002DEE           2593              JSR     SIZEISBYTE
00002D58  3C3C 0002               2594              MOVE    #2,D6
00002D5C  4243                    2595              CLR     D3
00002D5E  4E75                    2596              RTS
00002D60                          2597              
00002D60                          2598  ADD_NOTRIGHTBYTE
00002D60  B67C 0005               2599              CMP     #%101,D3
00002D64  6600 0010               2600              BNE     ADD_NOTRIGHTWORD
00002D68  4EB9 00002DFE           2601              JSR     SIZEISWORD
00002D6E  3C3C 0002               2602              MOVE    #2,D6
00002D72  4243                    2603              CLR     D3
00002D74  4E75                    2604              RTS
00002D76                          2605  
00002D76                          2606  ADD_NOTRIGHTWORD
00002D76  B67C 0006               2607              CMP     #%110,D3
00002D7A  6600 FCB6               2608              BNE     INVALID_EA
00002D7E  4EB9 00002E0E           2609              JSR     SIZEISLONG
00002D84  3C3C 0002               2610              MOVE    #2,D6
00002D88  4243                    2611              CLR     D3
00002D8A  4E75                    2612              RTS 
00002D8C                          2613                               
00002D8C                          2614                       
00002D8C                          2615                       
00002D8C                          2616  *****************************                  
00002D8C                          2617  GETSIZE_ADDI
00002D8C  4EB8 293C               2618          JSR     bits8to10
00002D90  B67C 0000               2619          CMP     #%000,D3
00002D94  6600 000C               2620          BNE     ADDI_NOTBYTE
00002D98  4EB9 00002DEE           2621          JSR     SIZEISBYTE
00002D9E  4243                    2622          CLR     D3
00002DA0  4E75                    2623          RTS
00002DA2                          2624  
00002DA2                          2625  ADDI_NOTBYTE
00002DA2  B67C 0001               2626          CMP     #%001,D3
00002DA6  6600 000C               2627          BNE     ADDI_NOTWORD
00002DAA  4EB9 00002DFE           2628          JSR     SIZEISWORD
00002DB0  4243                    2629          CLR     D3
00002DB2  4E75                    2630          RTS
00002DB4                          2631          
00002DB4                          2632  ADDI_NOTWORD
00002DB4  B67C 0002               2633          CMP     #%010,D3
00002DB8  6600 FC78               2634          BNE     INVALID_EA
00002DBC  4EB9 00002E0E           2635          JSR     SIZEISLONG
00002DC2  4243                    2636          CLR     D3
00002DC4  4E75                    2637          RTS
00002DC6                          2638          
00002DC6                          2639                              
00002DC6                          2640                       
00002DC6                          2641  ********************************          
00002DC6                          2642                       
00002DC6                          2643                       
00002DC6                          2644  ********************************                     
00002DC6                          2645  GETSIZE_ADDA
00002DC6  4EB8 293C               2646          JSR     bits8to10
00002DCA  B67C 0003               2647          CMP     #%011,D3
00002DCE  6600 000C               2648          BNE     ADDA_NOTWORD
00002DD2  4EB9 00002DFE           2649          JSR     SIZEISWORD
00002DD8  4243                    2650          CLR     D3
00002DDA  4E75                    2651          RTS
00002DDC                          2652          
00002DDC                          2653  
00002DDC                          2654          
00002DDC                          2655  ADDA_NOTWORD
00002DDC  B67C 0007               2656          CMP     #%111,D3
00002DE0  6600 FC50               2657          BNE     INVALID_EA
00002DE4  4EB9 00002E0E           2658          JSR     SIZEISLONG
00002DEA  4243                    2659          CLR     D3
00002DEC  4E75                    2660          RTS
00002DEE                          2661  **********************************        
00002DEE                          2662      
00002DEE                          2663  SIZEISBYTE
00002DEE  1CFC 002E               2664         MOVE.B   #'.',(A6)+
00002DF2  1CFC 0042               2665         MOVE.B   #'B',(A6)+
00002DF6  1CFC 0020               2666         MOVE.B   #' ',(A6)+
00002DFA  4243                    2667         CLR      D3
00002DFC  4E75                    2668         RTS
00002DFE                          2669  
00002DFE                          2670  SIZEISWORD    
00002DFE  1CFC 002E               2671         MOVE.B   #'.',(A6)+
00002E02  1CFC 0057               2672         MOVE.B   #'W',(A6)+
00002E06  1CFC 0020               2673         MOVE.B   #' ',(A6)+
00002E0A  4243                    2674         CLR      D3
00002E0C  4E75                    2675         RTS
00002E0E                          2676                  
00002E0E                          2677  SIZEISLONG    
00002E0E  1CFC 002E               2678         MOVE.B   #'.',(A6)+
00002E12  1CFC 004C               2679         MOVE.B   #'L',(A6)+
00002E16  1CFC 0020               2680         MOVE.B   #' ',(A6)+
00002E1A                          2681  
00002E1A  4243                    2682         CLR      D3
00002E1C  4E75                    2683         RTS
00002E1E                          2684                  
00002E1E                          2685       
00002E1E= 00000001                2686  BUFFER DC.L 1     
00002E22                          2687      INCLUDE 'helpers.x68'
00002E22  1019                    2688  sub_AsToHeLoop          MOVE.B  (A1)+,D0            *gets first byte
00002E24  4EB9 00002E3C           2689                          JSR     sub_breakDownAs     *breaks down ASCII code
00002E2A  D280                    2690                          ADD.L   D0,D1               *load that char into D1
00002E2C  0C11 0000               2691                          CMPI.B  #$0,(A1)            *checks if more needs to be broken down
00002E30  6700 0006               2692                          BEQ     athEndLoop          *if no more is needed to be worked on, exits
00002E34  E989                    2693                          LSL.L   #$4,D1              *else, shift remaining char in D1 for next char
00002E36  60EA                    2694                          BRA     sub_AsToHeLoop      *loops through again
00002E38                          2695                          
00002E38  2E01                    2696  athEndLoop              MOVE.L  D1,D7               *hex number in D7
00002E3A  4E75                    2697                          RTS
00002E3C  B03C 0030               2698  sub_breakDownAs         CMP.B     #$30,D0           *$is it a 0-9 digit or an a-f letter?
00002E40  6D00 002A               2699                          BLT     as_ERROR                        
00002E44                          2700                          
00002E44  B03C 0039               2701                          CMP.B    #$39,D0            *is it an A-F letter?
00002E48  6E00 000C               2702                          BGT     as_LETTER
00002E4C                          2703                          
00002E4C  6000 0002               2704                          BRA     as_NUMBER
00002E50                          2705                                                 
00002E50  0400 0030               2706  as_number               SUB.B   #$30,D0             *subtract 30, used for digits
00002E54  4E75                    2707                          RTS
00002E56                          2708                          
00002E56  B03C 0041               2709  as_LETTER               CMP.B     #$41,D0           *letters A-F helper
00002E5A  6D00 0010               2710                          BLT     as_ERROR
00002E5E                          2711                          
00002E5E  B03C 0046               2712                          CMP.B     #$46, D0
00002E62  6E00 0008               2713                          BGT     as_ERROR
00002E66                          2714                          
00002E66  0400 0037               2715                          SUBI.B  #$37,D0             *subtract 37, used for A-F
00002E6A  4E75                    2716                          RTS
00002E6C                          2717                          
00002E6C  43F9 65727200           2718  as_ERROR                LEA     'err',A1            *will display error if conversion cannot happen
00002E72  103C 000D               2719                          MOVE.B  #13,D0
00002E76  4E4F                    2720                          TRAP    #15  
00002E78                          2721  sub_StartReadingData    
00002E78  0801 0000               2722                          BTST    #0,D1                   *checks if Least Significant Bit is 1, (looks at XNZVC and sees if Z is 1) 
00002E7C  6600 0006               2723                          BNE     srdFailAddrOddB         *if 1, then address is odd and invalid
00002E80                          2724                          
00002E80  7E00                    2725                          MOVE.L  #0,D7                   *if D7 equals 0, then address is valid
00002E82  4E75                    2726  srdFinish               RTS
00002E84                          2727  
00002E84  43F8 10E4               2728  srdFailAddrOddB         LEA     addr_oddBit_msg,A1
00002E88  103C 000E               2729                          MOVE.B  #14,D0
00002E8C  4E4F                    2730                          TRAP    #15
00002E8E                          2731                          
00002E8E  7E01                    2732                          MOVE.L  #1,D7               *if D7 equals 1, then address is invalid
00002E90  60F0                    2733                          BRA     srdFinish
00002E92                          2734  sub_EndReadingData  
00002E92  0801 0000               2735                          BTST    #0,D1               *checks if LSB is 1, 
00002E96  6600 0018               2736                          BNE     erdFailAddrOddB     *if 1, then address is odd and invalid
00002E9A                          2737                          
00002E9A  B5CB                    2738                          CMP.L   A3,A2               *end address must be greater than start address
00002E9C  6E00 0004               2739                          BGT     erdFailAddrOrder    *if start addres is greater, go to error
00002EA0                          2740  
00002EA0  4E75                    2741  erdFinish               RTS
00002EA2                          2742  
00002EA2  43F8 110B               2743  erdFailAddrOrder        LEA     addr_order_check,A1
00002EA6  103C 000E               2744                          MOVE.B  #14,D0
00002EAA  4E4F                    2745                          TRAP    #15
00002EAC                          2746                          
00002EAC  7E01                    2747                          MOVE.L  #1,D7
00002EAE  60F0                    2748                          BRA     erdFinish
00002EB0                          2749  
00002EB0  43F8 10E4               2750  erdFailAddrOddB         LEA     addr_oddBit_msg,A1
00002EB4  103C 000E               2751                          MOVE.B  #14,D0
00002EB8  4E4F                    2752                          TRAP    #15
00002EBA                          2753                          
00002EBA  7E01                    2754                          MOVE.L  #1,D7               *if D7 equals 1, then address is invalid
00002EBC  60E2                    2755                          BRA     erdFinish
00002EBE                          2756                          
00002EBE                          2757  
00002EBE                          2758  
00002EBE                          2759  
00002EBE                          2760  
00002EBE                          2761  
00002EBE                          2762  
00002EBE                          2763  
00002EBE                          2764  
00002EBE                          2765  -------------------- end include --------------------
00002EBE                          2766      END START 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_BUFFER     29F0
ABSOLUTE_LONG_BUFFER  2A20
ABSOLUTE_WORD_BUFFER  2A0E
ADD                 2232
ADDA                220C
ADDA_BUFFER         2216
ADDA_DISP           11CA
ADDA_NOTWORD        2DDC
ADDI                22C6
ADDI_BUFFER         234E
ADDI_DES            22EA
ADDI_DISP           11CF
ADDI_NOTBYTE        2DA2
ADDI_NOTWORD        2DB4
ADDI_SRC            22DC
ADDQ                2454
ADDQ_BUFFER         24B2
ADDQ_DEST           2488
ADDQ_DISP           11D4
ADDQ_NOTBYTE        2B48
ADDQ_NOTWORD        2B5A
ADDQ_SRC            2470
ADDRESS_BUFFER      29EA
ADDR_ODDBIT_MSG     10E4
ADDR_ORDER_CHECK    110B
ADD_BUFFER          223A
ADD_DEST            22A4
ADD_DIRECTION_REVERSED  226A
ADD_DISP            11C6
ADD_NOTBYTE         2D1E
ADD_NOTLEFT         2D4A
ADD_NOTRIGHTBYTE    2D60
ADD_NOTRIGHTWORD    2D76
ADD_NOTWORD         2D34
ADD_SRC             2280
AND                 27A2
AND_BUFFER          27AC
AND_DISP            11EF
ASL                 27DE
ASL_BUFFER          27E8
ASL_DISP            11FE
ASR                 27C2
ASR_BUFFER          27CC
ASR_DISP            1202
AS_ERROR            2E6C
AS_LETTER           2E56
AS_NUMBER           2E50
ATHENDLOOP          2E38
BACKSLASHSIGH       124C
BCC_DISP            1216
BGT_DISP            121A
BITS11TO13          294E
BITS11TO16          2970
BITS14TO16          2960
BITS1TO10           2980
BITS5TO7            2916
BITS5TO8            292A
BITS8TO10           293C
BLE_DISP            121E
BUFFER              2E1E
CLOSEPAREN          1250
CLR_DISP            11EB
CMP                 26DA
CMP_BUFFER          2718
CMP_DEST            2754
CMP_DIRECTION_REVERSED  2700
CMP_NOTBYTE         2B86
CMP_NOTLEFT         2BB2
CMP_NOTRIGHTBYTE    2BC8
CMP_NOTRIGHTWORD    2BDE
CMP_NOTWORD         2B9C
CMP_SRC             272A
CODE0000            2104
CODE0001            2118
CODE0010            211C
CODE0011            2120
CODE0100            2124
CODE0101            2158
CODE0110            215C
CODE0111            2160
CODE1000            2164
CODE1001            2176
CODE1010            217A
CODE1011            217E
CODE1100            2182
CODE1101            2194
CODE1110            21E0
CODE1111            2206
COMMASIGN           124A
COPY_OPCODE         2ACA
CR                  D
DIVU                24F6
DIVU_BUFFER         2522
DIVU_DEST           2562
DIVU_DISP           11E2
DIVU_SRC            2538
DOLLARSIGN          1244
DONE                2914
DO_NOTHING          1FE6
DUMMY_SUB           209A
ENDTEST_MSG         115F
ERDFAILADDRODDB     2EB0
ERDFAILADDRORDER    2EA2
ERDFINISH           2EA0
EXIT                20A0
FINISHER            28E6
FIVE                28BA
FOUR                28AA
GETSIZE_ADD         2D04
GETSIZE_ADDA        2DC6
GETSIZE_ADDI        2D8C
GETSIZE_ADDQ        2B32
GETSIZE_CMP         2B6C
GETSIZE_MULS        2B6C
GETSIZE_OR          2C7C
GETSIZE_SUB         2BF4
HEXATABLE           1222
INPUT               209C
INPUT_BUFFER        125E
INSERT_NUM          2862
INVALIDEA_DISP      11A3
INVALID_DISP        119E
INVALID_EA          2A32
INVALID_OP          2A36
JMP_MODE            2832
JMP_TABLE           20A4
JSR                 2A6C
JSR_DISP            120E
LEA                 236A
LEA_BUFFER          238C
LEA_DEST            2430
LEA_DISP            11E7
LEA_SRC             239E
LF                  A
LINEBREAK           119B
LINECOUNT           125D
LOCATION_ENDDATA    1264
LOCATION_END_MSG    10C7
LOCATION_STARTDATA  1260
LOCATION_START_MSG  10A8
LSL                 27FA
LSL_BUFFER          2804
LSL_DISP            11F6
LSR                 2816
LSR_BUFFER          2820
LSR_DISP            11FA
MAIN_LOOP           1006
MINUSSIGN           1248
MODE000             2992
MODE001             2998
MODE010             29A0
MODE011             29AA
MODE100             29B4
MODE101             29C2
MODE110             29CC
MODE111             29D6
MOVEA_DISP          11B4
MOVEM               2A92
MOVEM_DISP          11C0
MOVEM_W             2AB2
MOVEQ               24CA
MOVEQ_BUFFER        24D4
MOVEQ_DISP          11BA
MOVE_DISP           11AF
MULS                277C
MULS_BUFFER         2786
MULS_DISP           11DD
NOP                 2A50
NOP_DISP            11AB
ONE                 287A
ONEPAREN            2906
OPENPAREN           124E
OR                  258A
OR_BUFFER           25C8
OR_DEST             260E
OR_DIRECTION_REVERSED  25B0
OR_DISP             11F3
OR_NOTBYTE          2C96
OR_NOTLEFT          2CC2
OR_NOTRIGHTBYTE     2CD8
OR_NOTRIGHTWORD     2CEE
OR_NOTWORD          2CAC
OR_SRC              25DC
PAUSE_MSG           1145
PLUSSIGN            1246
POSTINCR            28F4
POUNDSIGN           1242
PRINT_ADDRESS       2AD0
PRINT_BUFFER        2AF0
PRINT_DEREF_ADDRESS  2B0C
ROL_DISP            1206
ROR_DISP            120A
RTS                 2A5E
RTS_DISP            1212
SEVEN               28DA
SIX                 28CA
SIZEISBYTE          2DEE
SIZEISLONG          2E0E
SIZEISWORD          2DFE
SIZE_B              1254
SIZE_L              125A
SIZE_W              1257
SKIP                209C
SPACE               1252
SRDFAILADDRODDB     2E84
SRDFINISH           2E82
START               1000
SUB                 2636
SUB_ASTOHELOOP      2E22
SUB_BREAKDOWNAS     2E3C
SUB_BUFFER          2670
SUB_DEST            26B2
SUB_DIRECTION_REVERSED  265C
SUB_DISP            11D9
SUB_ENDREADINGDATA  2E92
SUB_NOTBYTE         2C0E
SUB_NOTLEFT         2C3A
SUB_NOTRIGHTBYTE    2C50
SUB_NOTRIGHTWORD    2C66
SUB_NOTWORD         2C24
SUB_SRC             2688
SUB_STARTREADINGDATA  2E78
TABLE_LENGTH        1268
THREE               289A
TWO                 288A
WELCOME_MSG         1044
